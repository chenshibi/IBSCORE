--新增二代数据提取菜单
INSERT INTO FUNCTION_INFO(FUNCID, FUNCNAME, PAGEPATH, LOCATION, ISDIRECTORY, LASTDIRECTORY, SHOWSEQ, FUNC_CLASS, FUNC_TYPE, WORKFLOW_FLAG, UP_FUNC_CODE, FUNC_DESC, STATUS, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, ICON_CLS, MISC) 
VALUES ('777703', '二代数据提取', '/fpages/crms/ftl/DataExtraction.ftl', 2.00, 0.00, '100', 1.00, '1', '1', NULL, 'NULL', 'OTHER', '1', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL');
--二代数据提取授权
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '213', '777703');
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '202', '777703');
--二代新增公共文件上传下载
INSERT INTO FUNCTION_INFO (FUNCID, FUNCNAME, PAGEPATH, LOCATION, ISDIRECTORY, LASTDIRECTORY, SHOWSEQ, FUNC_CLASS, FUNC_TYPE, WORKFLOW_FLAG, UP_FUNC_CODE, FUNC_DESC, STATUS, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, ICON_CLS, MISC) VALUES ('700005', '公共文件上传功能', '/fpages/crms/ftl/CommonFileGroupUpload.ftl', 2.00, 0.00, '666', 9.00, '1', '1', null, null, 'CRMS', '1', null, null, null, null, null, null);
INSERT INTO FUNCTION_INFO (FUNCID, FUNCNAME, PAGEPATH, LOCATION, ISDIRECTORY, LASTDIRECTORY, SHOWSEQ, FUNC_CLASS, FUNC_TYPE, WORKFLOW_FLAG, UP_FUNC_CODE, FUNC_DESC, STATUS, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, ICON_CLS, MISC) VALUES ('700006', '公共文件下载功能', '/fpages/crms/ftl/CommonPermitFileUpload.ftl', 2.00, 0.00, '666', 10.00, '1', '1', null, null, 'CRMS', '1', null, null, null, null, null, null);
--公共文件上传授权
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '213', '700005');
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '202', '700005');
--公共文件下载授权
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '213', '700006');
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '202', '700006');
--二代新增数据字典
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120413,701.00, '1', '上传类型 ', 1.00, '对公', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120414,701.00, '2', '上传类型 ', 1.00, '个人', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120508,702.00, '25', '城市 ', 1.00, '武汉', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120509,702.00, '0', '城市 ', 1.00, '其他', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
--FILE_SUBMIT表新增字段文件类型,城市
ALTER TABLE  FILE_SUBMIT ADD FILE_TYPE VARCHAR(3);
ALTER TABLE  FILE_SUBMIT ADD CITY VARCHAR(3);
--二代新增数据字典
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120407,601.00, '1', '表名 ', 1.00, 'CR_COM_EAA', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120408,601.00, '2', '表名 ', 1.00, 'CR_COM_EA01CH', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120409,601.00, '3', '表名 ', 1.00, 'CR_COM_ECA', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120410,601.00, '4', '表名 ', 1.00, 'CR_COM_EC020H', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120411,601.00, '5', '表名 ', 1.00, 'CR_COM_EC030H', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120412,601.00, '6', '表名 ', 1.00, 'CR_COM_EC050H', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120413,601.00, '6', '表名 ', 1.00, 'CR_COM_EC050H', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120415,601.00, '7', '表名 ', 1.00, 'CR_COM_EBA', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120416,601.00, '8', '表名 ', 1.00, 'CR_COM_EBB', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120417,601.00, '9', '表名 ', 1.00, 'CR_COM_EB02AH', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120418,601.00, '10', '表名 ', 1.00, 'CR_COM_EB02BH', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120419,601.00, '11', '表名 ', 1.00, 'CR_COM_EB02CH', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120420,601.00, '13', '表名 ', 1.00, 'CR_COM_EBC', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120421,601.00, '14', '表名 ', 1.00, 'CR_COM_EB03AH', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120422,601.00, '15', '表名 ', 1.00, 'CR_COM_EB03BH', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120423,601.00, '16', '表名 ', 1.00, 'CR_COM_EBD', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120424,601.00, '17', '表名 ', 1.00, 'CR_COM_EBE', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120425,601.00, '18', '表名 ', 1.00, 'CR_COM_EB05AH', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120426,601.00, '19', '表名 ', 1.00, 'CR_COM_EB05BH', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120427,601.00, '20', '表名 ', 1.00, 'CR_COM_EDA', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120428,601.00, '21', '表名 ', 1.00, 'CR_COM_ED01', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120429,601.00, '22', '表名 ', 1.00, 'CR_COM_ED02', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120430,601.00, '23', '表名 ', 1.00, 'CR_COM_ED03', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120431,601.00, '24', '表名 ', 1.00, 'CR_COM_ED01B', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120432,601.00, '25', '表名 ', 1.00, 'CR_COM_ED01C', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120433,601.00, '26', '表名 ', 1.00, 'CR_COM_ED01BH', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120434,601.00, '27', '表名 ', 1.00, 'CR_COM_ED01CH', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120435,601.00, '28', '表名 ', 1.00, 'CR_COM_EDB', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120436,601.00, '29', '表名 ', 1.00, 'CR_COM_ED04', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120437,601.00, '30', '表名 ', 1.00, 'CR_COM_ED04B', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120438,601.00, '31', '表名 ', 1.00, 'CR_COM_ED05', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120439,601.00, '32', '表名 ', 1.00, 'CR_COM_EDC', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120440,601.00, '33', '表名 ', 1.00, 'CR_COM_EDD', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120441,601.00, '34', '表名 ', 1.00, 'CR_COM_ED07', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120442,601.00, '35', '表名 ', 1.00, 'CR_COM_ED08', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120443,601.00, '36', '表名 ', 1.00, 'CR_COM_ED09', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120444,601.00, '37', '表名 ', 1.00, 'CR_COM_EEA', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120445,601.00, '38', '表名 ', 1.00, 'CR_COM_EE01BH', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120446,601.00, '39', '表名 ', 1.00, 'CR_COM_EFA', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120447,601.00, '40', '表名 ', 1.00, 'CR_COM_EFB', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120448,601.00, '41', '表名 ', 1.00, 'CR_COM_EFC', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120449,601.00, '42', '表名 ', 1.00, 'CR_COM_EFD', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120450,601.00, '43', '表名 ', 1.00, 'CR_COM_EF05BH', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120451,601.00, '44', '表名 ', 1.00, 'CR_COM_EFE', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120452,601.00, '45', '表名 ', 1.00, 'CR_COM_EFF', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120453,601.00, '46', '表名 ', 1.00, 'CR_COM_EFG', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120454,601.00, '47', '表名 ', 1.00, 'CR_COM_EGA', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120455,601.00, '48', '表名 ', 1.00, 'CR_COM_EHA', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120456,601.00, '49', '表名 ', 1.00, 'CR_COM_EIA', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
--征信查询企业与个人展示页面
insert into  function_info (FUNCID,	FUNCNAME,PAGEPATH,LOCATION,ISDIRECTORY,LASTDIRECTORY,SHOWSEQ,FUNC_CLASS	,FUNC_TYPE,WORKFLOW_FLAG,UP_FUNC_CODE,FUNC_DESC,STATUS,	EFFECT_DATE,	EXPIRE_DATE,	TIMESTAMPS,	MISCFLGS,	ICON_CLS,	MISC)  
values('777706','个人报告明细',	'/fpages/business/ftl/IbsPerCredit.ftl','2.00','0.00',	'100','6.00','1','1',null,null,'OTHER','1',null,null,	null,null,null,	null);
insert into  function_info (FUNCID,	FUNCNAME,PAGEPATH,LOCATION,ISDIRECTORY,LASTDIRECTORY,SHOWSEQ,FUNC_CLASS	,FUNC_TYPE,WORKFLOW_FLAG,UP_FUNC_CODE,FUNC_DESC,STATUS,	EFFECT_DATE,	EXPIRE_DATE,	TIMESTAMPS,	MISCFLGS,	ICON_CLS,	MISC)  
values('777707','个人报告汇总信息',	'/fpages/business/ftl/IbsPerCreditSum.ftl','2.00','0.00',	'100','7.00','1','1',null,null,'OTHER','1',null,null,	null,null,null,	null);
insert into  function_info (FUNCID,	FUNCNAME,PAGEPATH,LOCATION,ISDIRECTORY,LASTDIRECTORY,SHOWSEQ,FUNC_CLASS	,FUNC_TYPE,WORKFLOW_FLAG,UP_FUNC_CODE,FUNC_DESC,STATUS,	EFFECT_DATE,	EXPIRE_DATE,	TIMESTAMPS,	MISCFLGS,	ICON_CLS,	MISC)  
values('777704','企业报告明细',	'/fpages/business/ftl/IbsEntCredit.ftl','2.00','0.00',	'100','4.00','1','1',null,null,'OTHER','1',null,null,	null,null,null,	null);
insert into  function_info (FUNCID,	FUNCNAME,PAGEPATH,LOCATION,ISDIRECTORY,LASTDIRECTORY,SHOWSEQ,FUNC_CLASS	,FUNC_TYPE,WORKFLOW_FLAG,UP_FUNC_CODE,FUNC_DESC,STATUS,	EFFECT_DATE,	EXPIRE_DATE,	TIMESTAMPS,	MISCFLGS,	ICON_CLS,	MISC)  
values('777705','企业报告汇总信息',	'/fpages/business/ftl/IbsEntCreditSum.ftl','2.00','0.00',	'100','5.00','1','1',null,null,'OTHER','1',null,null,	null,null,null,	null);
--企业报告明细授权
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '213', '777704');
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '202', '777704');
--企业报告汇总信息授权
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '213', '777705');
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '202', '777705');
--个人报告明细菜单授权
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '213', '777706');
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '202', '777706');
--个人报告汇总信息授权
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '213', '777707');
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '202', '777707');
--二代个人数据提取字典
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120506,601.00,  '1',    '表名 ',1.00, 'CR_PER_PRH',     null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120457,601.00, '2  ',   '表名 ', 1.00, 'CR_PER_PA01CH',      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120458,601.00, '3  ',   '表名 ', 1.00, 'CR_PER_POQ',      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120459,601.00, '4  ',   '表名 ', 1.00, 'CR_PER_PQO',      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120460,601.00, '5  ',   '表名 ', 1.00, 'CR_PER_PBS',      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120461,601.00, '6  ',   '表名 ', 1.00, 'CR_PER_PF06ZH',      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120462,601.00, '7  ',   '表名 ', 1.00, 'CR_PER_PNO',      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120463,601.00, '8  ',   '表名 ', 1.00, 'CR_PER_PC030H',      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120464,601.00, '9  ',   '表名 ', 1.00, 'CR_PER_PPO',      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120465,601.00, '10 ',   '表名 ', 1.00, 'CR_PER_PC040H',      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120466,601.00, '11 ',    '表名 ',1.00, 'CR_PER_PAP',      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120467,601.00, '12 ',    '表名 ',1.00, 'CR_PER_PF04ZH',      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120468,601.00, '13 ',    '表名 ',1.00, 'CR_PER_PAH' ,     null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120469,601.00, '14 ',    '表名 ',1.00, 'CR_PER_PF08ZH' ,     null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120470,601.00, '15 ',    '表名 ',1.00, 'CR_PER_PG010H' ,     null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120471,601.00, '16 ',    '表名 ',1.00, 'CR_PER_PND' ,     null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120472,601.00, '17 ',    '表名 ',1.00, 'CR_PER_PE01ZH' ,     null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120473,601.00, '18 ',    '表名 ',1.00, 'CR_PER_PF01ZH' ,    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120474,601.00, '19 ',    '表名 ',1.00, 'CR_PER_PMM' ,     null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120475,601.00, '20 ',    '表名 ',1.00, 'CR_PER_PDA'   ,   null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120476,601.00, '21 ',    '表名 ',1.00, 'CR_PER_PD01ZH'  ,    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120477,601.00, '22 ',    '表名 ',1.00, 'CR_PER_PD01HH'  ,    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120478,601.00, '23 ',    '表名 ',1.00, 'CR_PER_PD01FH'  ,    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120479,601.00, '24 ',    '表名 ',1.00, 'CR_PER_PD01GH'   ,   null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120480,601.00, '25 ',    '表名 ',1.00, 'CR_PER_PD01DH'  ,    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120481,601.00, '26 ',    '表名 ',1.00, 'CR_PER_PD01EH'  ,    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120482,601.00, '27 ',    '表名 ',1.00, 'CR_PER_PRM'   ,   null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120483,601.00, '28 ',    '表名 ',1.00, 'CR_PER_PCJ'      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120484,601.00, '29 ',    '表名 ',1.00, 'CR_PER_PF02ZH' ,     null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120485,601.00, '30 ',    '表名 ',1.00, 'CR_PER_PSM'   ,   null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120486,601.00, '31 ',    '表名 ',1.00, 'CR_PER_POS'  ,    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120487,601.00, '32 ',    '表名 ',1.00, 'CR_PER_POT'    ,  null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120488,601.00, '33 ',    '表名 ',1.00, 'CR_PER_PCE'    ,  null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120489,601.00, '34 ',    '表名 ',1.00, 'CR_PER_PF03ZH' ,     null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120490,601.00, '35 ',    '表名 ',1.00, 'CR_PER_PIM'    ,  null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120491,601.00, '36 ',    '表名 ',1.00, 'CR_PER_PB01BH' ,     null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120492,601.00, '37 ',    '表名 ',1.00, 'CR_PER_PCA'   ,   null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120493,601.00, '38 ',    '表名 ',1.00, 'CR_PER_PD02ZH',      null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120494,601.00, '39 ',    '表名 ',1.00, 'CR_PER_PCR' ,     null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120495,601.00,  '40' ,   '表名 ',1.00, 'CR_PER_PD03ZH' ,    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120496,601.00,  '41',    '表名 ',1.00, 'CR_PER_PCO' ,    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120497,601.00,  '42',    '表名 ',1.00, 'CR_PER_PC02BH' ,    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120498,601.00,  '43',    '表名 ',1.00, 'CR_PER_PC02KH' ,    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120499,601.00,  '44',    '表名 ',1.00, 'CR_PER_PC02AH' ,    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120500,601.00,  '45',     '表名 ',1.00, 'CR_PER_PC02DH'  , null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM,ST) VALUES (120501,601.00,  '46',    '表名 ',1.00, 'CR_PER_PPQ' ,    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120502,601.00,  '47',    '表名 ',1.00, 'CR_PER_PF07ZH',    null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120503,601.00,  '48',    '表名 ',1.00, 'CR_PER_POM'  ,   null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120504,601.00,  '49',    '表名 ',1.00, 'CR_PER_PHF'  ,  null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120505,601.00,  '50',    '表名 ',1.00, 'CR_PER_PF05ZH',     null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
--提数定时任务
INSERT INTO REPORT_JOB_CONFIG (JOB_ID, JOB_NAME, JOB_CLASS_NAME, JOB_TIME, JOB_STAUTS, JUST_WORKDATE_RUN, JOB_REMARK, JOB_LST_TM, JOB_LST_TRL, SYSNAME) VALUES ('800020', '企业征信数据定时抽取', 'com.huateng.msgplatform.job.CorpDataExtractionJob', '0 15 10 ? * MON-FRI', '1', 'N', '企业征信数据定时抽取', '20190816145047', 'lyy', 'OTHER');
INSERT INTO REPORT_JOB_CONFIG (JOB_ID, JOB_NAME, JOB_CLASS_NAME, JOB_TIME, JOB_STAUTS, JUST_WORKDATE_RUN, JOB_REMARK, JOB_LST_TM, JOB_LST_TRL, SYSNAME) VALUES ('800021', '个人征信数据定时抽取', 'com.huateng.msgplatform.job.PersonalDataExtractionJob', '0 15 10 ? * MON-FRI', '1', 'N', '个人征信数据定时抽取', '20190816145047', 'lyy', 'OTHER');

--查询授权有效期设置
INSERT INTO FUNCTION_INFO (FUNCID, FUNCNAME, PAGEPATH, LOCATION, ISDIRECTORY, LASTDIRECTORY, SHOWSEQ, FUNC_CLASS, FUNC_TYPE, WORKFLOW_FLAG, UP_FUNC_CODE, FUNC_DESC, STATUS, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, ICON_CLS, MISC) VALUES ('700007', '查询授权有效期设置', '/fpages/crms/ftl/CommonPermitFileUpload.ftl', 2.00, 0.00, '666', 9.00, '1', '1', null, null, 'CRMS', '1', null, null, null, null, null, null);

--查询授权有效期设置
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '213', '700007');
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '202', '700007');

--查询有效期设置日志记录表
CREATE TABLE IBS_QUERY_EXPIRE(
id varchar(32) primary key not null ,
user_name varchar(40),
central_code varchar(32),
Client_LEID  varchar(50),
customer_name varchar(40),
update_time varchar(14),
expire_time varchar(14),
rsv1        varchar(14),
rsv2        varchar(20),
rsv3        varchar(32),
status varchar(2)
)

--新增 消息发送配置-消息编号-IBS_0004-每日全用户变化报表(by quxin 2019.09.05)
INSERT INTO DATA_DIC (ID, DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) 
VALUES (8004.00, 8000.00, 'IBS_0004', '消息类型', 13.00, 'IBS_0004-每日用户变化报表', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '1');
--新增 消息发送配置-消息编号-IBS_0005-每月全用户变化报表(by quxin 2019.09.05)
INSERT INTO DATA_DIC (ID, DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) 
VALUES (8005.00, 8000.00, 'IBS_0005', '消息类型', 13.00, 'IBS_0005-每月用户变化报表', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '1');
--新增 消息发送配置-消息编号-IBS_0006-每日各用户查询量汇总(by quxin 2019.09.05)
INSERT INTO DATA_DIC (ID, DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) 
VALUES (8006.00, 8000.00, 'IBS_0006', '消息类型', 13.00, 'IBS_0006-每日各用户查询量汇总', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '1');
--新增 消息发送配置-消息编号-IBS_0007-每月各用户查询量汇总(by quxin 2019.09.05)
INSERT INTO DATA_DIC (ID, DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) 
VALUES (8007.00, 8000.00, 'IBS_0007', '消息类型', 13.00, 'IBS_0007-每月各用户查询量汇总', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '1');
--新增 消息发送配置-消息编号-IBS_0008-每月各部门查询量汇总(by quxin 2019.09.05)
INSERT INTO DATA_DIC (ID, DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) 
VALUES (8008.00, 8000.00, 'IBS_0008', '消息类型', 13.00, 'IBS_0008-每月各部门查询量汇总', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '1');

--新增 消息发送配置-IBS_0004 (by quxin 2019.09.05)
INSERT INTO CPG_MSG_CTL(ID, MSG_ID, SYS_TYPE, MSG_NAME, TYPE, SUB_TYPE, STATUS, CREATOR, CREATED_DATE, MOD_USER, MOD_DATE, CHECK_USER, CHECK_DATE, RSV1, RSV2, RSV3, RSV4, RSV5) 
VALUES ('4', 'IBS_0004', NULL, NULL, NULL, '54', '0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
--新增 消息发送配置-IBS_0005 (by quxin 2019.09.05)
INSERT INTO CPG_MSG_CTL(ID, MSG_ID, SYS_TYPE, MSG_NAME, TYPE, SUB_TYPE, STATUS, CREATOR, CREATED_DATE, MOD_USER, MOD_DATE, CHECK_USER, CHECK_DATE, RSV1, RSV2, RSV3, RSV4, RSV5) 
VALUES ('5', 'IBS_0005', NULL, NULL, NULL, '55', '0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
--新增 消息发送配置-IBS_0006 (by quxin 2019.09.05)
INSERT INTO CPG_MSG_CTL(ID, MSG_ID, SYS_TYPE, MSG_NAME, TYPE, SUB_TYPE, STATUS, CREATOR, CREATED_DATE, MOD_USER, MOD_DATE, CHECK_USER, CHECK_DATE, RSV1, RSV2, RSV3, RSV4, RSV5) 
VALUES ('6', 'IBS_0006', NULL, NULL, NULL, '56', '0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
--新增 消息发送配置-IBS_0007 (by quxin 2019.09.05)
INSERT INTO CPG_MSG_CTL(ID, MSG_ID, SYS_TYPE, MSG_NAME, TYPE, SUB_TYPE, STATUS, CREATOR, CREATED_DATE, MOD_USER, MOD_DATE, CHECK_USER, CHECK_DATE, RSV1, RSV2, RSV3, RSV4, RSV5) 
VALUES ('7', 'IBS_0007', NULL, NULL, NULL, '57', '0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
--新增 消息发送配置-IBS_0008 (by quxin 2019.09.05)
INSERT INTO CPG_MSG_CTL(ID, MSG_ID, SYS_TYPE, MSG_NAME, TYPE, SUB_TYPE, STATUS, CREATOR, CREATED_DATE, MOD_USER, MOD_DATE, CHECK_USER, CHECK_DATE, RSV1, RSV2, RSV3, RSV4, RSV5) 
VALUES ('8', 'IBS_0008', NULL, NULL, NULL, '58', '0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
--数据字典码表更新
--个人借贷特殊交易类型代码表中增加
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120514,6037.00, '12', '个人借贷特殊交易类型', 6.00, '12-资产剥离', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120515,6037.00, '13', '个人借贷特殊交易类型', 6.00, '13-资产转让', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
--企业身份标识类型代码表
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120516,6065.00, '11', '企业身份标识类型', 6.00, '11-机构信用代码', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
--特定交易类型
UPDATE DATA_DIC SET DATA_NAME='11-展期',data_no='11' where id='6696';
UPDATE DATA_DIC SET DATA_NAME='12-提前还款',data_no='12' where id='6697';
--公用事业业务类型代码表
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120517,6105.00, '02', '公用事业业务类型', 6.00, '02-水费信息', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120518,6105.00, '03', '公用事业业务类型', 6.00, '03-燃气费信息', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120519,6105.00, '04', '公用事业业务类型', 6.00, '03-有线电视收视费', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120520,6105.00, '99', '公用事业业务类型', 6.00, '99-其他', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
--五级分类代码表
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120521,6032.00, '99', '违约', 6.00, '6-违约', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
--企业信用报告机构查询原因代码
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120522,6666.00, '01', '企业信用报告机构查询原因', 6.00, '01-贷前（保前）审查', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120523,6666.00, '02', '企业信用报告机构查询原因', 6.00, '02-贷中操作', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120524,6666.00, '03', '企业信用报告机构查询原因', 6.00, '03-贷后（在保）管理', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120525,6666.00, '04', '企业信用报告机构查询原因', 6.00, '04-其他原因', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120526,6666.00, '05', '企业信用报告机构查询原因', 6.00, '05-关联查询', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120527,6666.00, '17', '企业信用报告机构查询原因', 6.00, '17-额度审批', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120528,6666.00, '18', '企业信用报告机构查询原因', 6.00, '18-担保审查', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
--企业信用报告机构查询原因代码
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120529,6667.00, 'AAA003', '企业信用报告机构查询原因', 6.00, 'AAA003-密码修改成功', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
--个人逾期（透支）汇总信息业务类型
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120529,6665.00, '1', '个人逾期（透支）汇总信息业务类型', 6.00, '1-非循环贷账户', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120529,6665.00, '2', '个人逾期（透支）汇总信息业务类型', 6.00, '2-循环额度下分账户', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
--更改CR_COM_ED09列名
EXEC sp_rename 'CR_COM_ED09.ED100J03','ED090J03','column';
--查询优先级数据字典
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120530,6664.00, '2', '查询状况', 6.00, '2-紧急', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120531,6664.00, '1', '查询状况', 6.00, '1-一般', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
--INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120532,6664.00, '0', '查询状况', 6.00, '0-批量', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
--新增查询优先级字段
ALTER TABLE CUST_PBOC_ENT_QUERY ADD QUERY_LEVEL VARCHAR(1);
ALTER TABLE CUST_PBOC_PER_QUERY ADD QUERY_LEVEL VARCHAR(1);
--调整国民经济行业分类名称
UPDATE DATA_DIC SET DATA_TYPE_NAME='GB/T 4754-2017 国民经济行业分类' WHERE DATA_TYPE_NO='6064';
--密码修改请求表
CREATE TABLE
    CR_PBOC_PASSWORDMODIFREQ
    (
        ID VARCHAR(32) COLLATE Chinese_PRC_CI_AS NOT NULL,
        MSG_START_FLAG VARCHAR(1) COLLATE Chinese_PRC_CI_AS,
        MSG_VERSION VARCHAR(5) COLLATE Chinese_PRC_CI_AS,
        MSG_SND_CODE VARCHAR(14) COLLATE Chinese_PRC_CI_AS,
        MSG_RCV_CODE VARCHAR(14) COLLATE Chinese_PRC_CI_AS,
        MSG_GEN_TIME VARCHAR(14) COLLATE Chinese_PRC_CI_AS,
        MSG_TYPE VARCHAR(14) COLLATE Chinese_PRC_CI_AS,
        MSG_ID VARCHAR(16) COLLATE Chinese_PRC_CI_AS,
        MSG_RSV VARCHAR(10) COLLATE Chinese_PRC_CI_AS,
        QUERY_ORG_CODE VARCHAR(14) COLLATE Chinese_PRC_CI_AS,
        USER_CODE VARCHAR(70) COLLATE Chinese_PRC_CI_AS,
        PASSWORD VARCHAR(100) COLLATE Chinese_PRC_CI_AS,
        USER_NAME VARCHAR(70) COLLATE Chinese_PRC_CI_AS,
        ORIGINAL_PASSWORD VARCHAR(100) COLLATE Chinese_PRC_CI_AS,
        NEW_PASSWORD VARCHAR(100) COLLATE Chinese_PRC_CI_AS,
        STATUS VARCHAR(2) COLLATE Chinese_PRC_CI_AS,
        IP VARCHAR(20) COLLATE Chinese_PRC_CI_AS,
        CREATE_USER VARCHAR(20) COLLATE Chinese_PRC_CI_AS,
        CREATE_TIME VARCHAR(14) COLLATE Chinese_PRC_CI_AS,
        CHECK_USER VARCHAR(20) COLLATE Chinese_PRC_CI_AS,
        CHECK_TIME VARCHAR(14) COLLATE Chinese_PRC_CI_AS,
        SEND_TIME VARCHAR(14) COLLATE Chinese_PRC_CI_AS,
        RESP_TIME VARCHAR(14) COLLATE Chinese_PRC_CI_AS,
        RSV1 VARCHAR(2) COLLATE Chinese_PRC_CI_AS,
        RSV2 VARCHAR(8) COLLATE Chinese_PRC_CI_AS,
        RSV3 VARCHAR(8) COLLATE Chinese_PRC_CI_AS,
        RSV4 VARCHAR(14) COLLATE Chinese_PRC_CI_AS,
        RSV5 VARCHAR(14) COLLATE Chinese_PRC_CI_AS,
        RSV6 VARCHAR(32) COLLATE Chinese_PRC_CI_AS,
        RSV7 VARCHAR(64) COLLATE Chinese_PRC_CI_AS,
        RSV8 VARCHAR(60) COLLATE Chinese_PRC_CI_AS,
        RSV9 VARCHAR(512) COLLATE Chinese_PRC_CI_AS,
        RSV10 VARCHAR(1024) COLLATE Chinese_PRC_CI_AS,
        PRIMARY KEY (ID)
    );
--密码修改应答表
CREATE TABLE
    CR_PBOC_PASSWORDMODIFRSP
    (
        ID VARCHAR(32) COLLATE Chinese_PRC_CI_AS NOT NULL,
        USER_NAME VARCHAR(70) COLLATE Chinese_PRC_CI_AS,
        RESULT_CODE VARCHAR(6) COLLATE Chinese_PRC_CI_AS,
        RESULT_DESC VARCHAR(100) COLLATE Chinese_PRC_CI_AS,
        REPORT_NAME VARCHAR(1) COLLATE Chinese_PRC_CI_AS,
        REPORT_MESSAGE_PATH VARCHAR(100) COLLATE Chinese_PRC_CI_AS,
        RECORD_STATUS VARCHAR(2) COLLATE Chinese_PRC_CI_AS,
        RECEIPT_TIME VARCHAR(14) COLLATE Chinese_PRC_CI_AS,
        RSV1 CHAR(2) COLLATE Chinese_PRC_CI_AS,
        RSV2 CHAR(8) COLLATE Chinese_PRC_CI_AS,
        RSV3 CHAR(8) COLLATE Chinese_PRC_CI_AS,
        RSV4 CHAR(14) COLLATE Chinese_PRC_CI_AS,
        RSV5 CHAR(14) COLLATE Chinese_PRC_CI_AS,
        RSV6 VARCHAR(32) COLLATE Chinese_PRC_CI_AS,
        RSV7 VARCHAR(64) COLLATE Chinese_PRC_CI_AS,
        RSV8 VARCHAR(60) COLLATE Chinese_PRC_CI_AS,
        RSV9 VARCHAR(60) COLLATE Chinese_PRC_CI_AS,
        RSV10 VARCHAR(60) COLLATE Chinese_PRC_CI_AS,
        PRIMARY KEY (ID)
    );
 --调整长度   
 ALTER TABLE CR_COM_EB02BH alter column EB02BS04 VARCHAR(4);
--二代征信密码设置菜单
INSERT INTO FUNCTION_INFO(FUNCID, FUNCNAME, PAGEPATH, LOCATION, ISDIRECTORY, LASTDIRECTORY, SHOWSEQ, FUNC_CLASS, FUNC_TYPE, WORKFLOW_FLAG, UP_FUNC_CODE, FUNC_DESC, STATUS, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, ICON_CLS, MISC) 
VALUES ('90', '二代征信设置', '', 2.00, 1.00, '0', 10.00, NULL, '1', NULL, 'NULL', 'CRMS', '1', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL');
--新增 一级菜单授权 “二代征信设置” 
INSERT INTO ROLE_FUNC_REL(ROLE_ID, FUNCID) VALUES ( '202', '90');
INSERT INTO ROLE_FUNC_REL(ROLE_ID, FUNCID) VALUES ( '213', '90');
--新增 二级菜单  “二代征信密码设置” 
INSERT INTO FUNCTION_INFO(FUNCID, FUNCNAME, PAGEPATH, LOCATION, ISDIRECTORY, LASTDIRECTORY, SHOWSEQ, FUNC_CLASS, FUNC_TYPE, WORKFLOW_FLAG, UP_FUNC_CODE, FUNC_DESC, STATUS, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, ICON_CLS, MISC) 
VALUES ('888801', '二代征信密码修改', '/fpages/crms/ftl/PasswordModif.ftl', 2.00, 0.00, '90', 1.00, '1', '1', NULL, 'NULL', 'CRMS', '1', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL');
--新增 二级菜单授权 “二代征信密码设置”
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '213', '888801');
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '202', '888801');
--二代新增数据字典
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120510,703.00, '0', '', 1.00, '成功', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120511,703.00, '1', '', 1.00, '用户名在系统内不存在，失败', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120512,703.00, '2', '', 1.00, '原密码有误，失败', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO DATA_DIC (ID,DATA_TYPE_NO, DATA_NO, DATA_TYPE_NAME, DATA_NO_LEN, DATA_NAME, LIMIT_FLAG, HIGH_LIMIT, LOW_LIMIT, EFFECT_DATE, EXPIRE_DATE, TIMESTAMPS, MISCFLGS, APPROVE_STATUS, APPROVE_RESULT, REC_STATUS, REP_STATUS, IS_SUB_SUCCESS, CRT_TM, LST_UPD_TM, LST_UPD_TLR, APPTYPE, BR_NO, YWDATE, ORGCODE, RECORD_UPD_TLR, RECORD_UPD_TM, ST) VALUES (120513,703.00, '3', '', 1.00, '新密码不符合要求，失败', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '1');
--新增报表查询菜单 
insert into  function_info (FUNCID,	FUNCNAME,PAGEPATH,LOCATION,ISDIRECTORY,LASTDIRECTORY,SHOWSEQ,FUNC_CLASS	,FUNC_TYPE,WORKFLOW_FLAG,UP_FUNC_CODE,FUNC_DESC,STATUS,	EFFECT_DATE,	EXPIRE_DATE,	TIMESTAMPS,	MISCFLGS,	ICON_CLS,	MISC)  
values('777708','企业个人报告抽查信息',	'/fpages/business/ftl/ReportInfoQuery.ftl','2.00','0.00',	'100','7.00','1','1',null,null,'OTHER','1',null,null,	null,null,null,	null);
--授权
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '213', '777708');
INSERT INTO ROLE_FUNC_REL( ROLE_ID, FUNCID) VALUES ( '202', '777708');

ALTER VIEW
    IBS_ENT_CREDIT
    (
        ID,
        BATCHID,
        账户名称,
        授信机构,
        帐户状态,
        帐户类型,
        担保方式,
        开立日期,
        到期日,
        期数,
        授信额度,
        已用额度,
        币种,
        余额,
        本月应还款,
        本月实还款,
        最近一次还款日期,
        实际关闭日期,
        贷款类型,
        当前五级分类,
        当前逾期总额,
        当前逾期本金,
        曾经逾期月数,
        曾经逾期金额加总,
        曾经最差五级分类,
        TUE,
        DSR,
        WC
    ) AS
SELECT DISTINCT
    B.ID                                          AS ID,
    A.ID                                          AS BATCHID,
    B.ED01AI01                                    AS '账户名称',
    EA01BI01                                      AS '授信机构',
    ED01AD01                                      AS '帐户状态',
    ED01AD02                                      AS '帐户类型',
    ED01AD08                                      AS '担保方式',
    ED01AR01                                      AS '开立日期',
    ED01AR02                                      AS '到期日',
    ED01AD03                                      AS '期数',
    ED060J01                                      AS '授信额度',
    ED060J04                                      AS '已用额度',
    ED060D04                                      AS '币种',
    ED01BJ01                                      AS '余额',
    ED01BJ03                                      AS '本月应还款',
    ED01BJ02                                      AS '本月实还款',
    ED01BR04                                      AS '最近一次还款日期',
    ED01AR03                                      AS '实际关闭日期',
    ED01AD05                                      AS '贷款类型',
    ED01BD01                                      AS '当前五级分类',
    D.ED01BJ04                                    AS '当前逾期总额',
    ED01BJ05                                      AS '当前逾期本金',
    E.ED01BS02                                    AS '曾经逾期月数',
    E.ED01BJ04                                    AS '曾经逾期金额加总',
    E.ED01BD01_MAX                                AS '曾经最差五级分类',
    CAST(U.ED01BJ01_U AS VARCHAR(30))             AS 'TUE',
    CAST(ISNULL(V.Monthly_Debt,0) AS VARCHAR(30)) AS 'DSR',
    CAST(ISNULL(Y.WC,0) AS VARCHAR(30))           AS 'WC'
FROM
    (
        SELECT
            *
        FROM
            CR_COM_ED01
        WHERE
            ED01AD01 <> '2') B
LEFT JOIN
    CR_COM_EAA A
ON
    A.ID=B.BATCH_ID
LEFT JOIN
    CR_COM_EDC C
ON
    A.ID=C.ID
LEFT JOIN
    (
        SELECT
            A1.*
        FROM
            CR_COM_ED01BH A1
        INNER JOIN
            (
                SELECT
                    MAX(ED01BR02) AS ED01BR02,
                    MIN(ED01BJ01) AS ED01BJ01,
                    MAX(ED01BR01) AS ED01BR01,
                    PARENTID,
                    BATCH_ID
                FROM
                    CR_COM_ED01BH
                GROUP BY
                    PARENTID,
                    BATCH_ID) B1
        ON
            A1.PARENTID=B1.PARENTID
        AND A1.ED01BR02=B1.ED01BR02
        AND A1.ED01BJ01=B1.ED01BJ01
        AND A1.ED01BR01=B1.ED01BR01
        AND A1.BATCH_ID=B1.BATCH_ID) D
ON
    D.PARENTID=B.ID
LEFT JOIN
    (
        SELECT
            COUNT(ED01BS02)                                       AS ED01BS02,
            MAX(ED01BD01)                                         AS ED01BD01_MAX,
            SUM(CAST(REPLACE(ISNULL(ED01BJ04,0),',','') AS INT )) AS ED01BJ04,
            PARENTID
        FROM
            CR_COM_ED01BH
        GROUP BY
            PARENTID) E
ON
    E.PARENTID=B.ID
LEFT JOIN
    (
        SELECT
            AA.BATCH_ID ,
            AA.ED01AI01,
            SUM(AA.ED01BJ01) AS ED01BJ01_U
        FROM
            (
                SELECT
                    A1.batch_id,
                    CASE
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) <=1
                        THEN '短期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) <=5
                        AND DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10)
                            ,'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) >1
                        THEN '中期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) >5
                        THEN '长期负债'
                    END AS Tenor,
                    CASE
                        WHEN ED01AD08 IN ('0',
                                          '1')
                        THEN 'Unsecured'
                        WHEN ED01AD08 IN ('2',
                                          '3')
                        THEN 'Secured'
                    END                                             AS DANBAO,
                    CAST(REPLACE(ISNULL(ED01BJ01,0),',','') AS INT) AS ED01BJ01,
                    ED01AI01
                FROM
                    CR_COM_ED01 A1
                LEFT JOIN
                    CR_COM_ED01BH A2
                ON
                    A1.ID=A2.PARENTID
                WHERE
                    ED01AD01 <>'2'
                AND ED01AD02 IN ('D1',
                                 'R1',
                                 'R4')) AA
        WHERE
            AA.DANBAO='Unsecured'
        AND AA.Tenor IN ('长期负债',
                         '中期负债')
        GROUP BY
            AA.BATCH_ID,
            AA.ED01AI01) U
ON
    U.BATCH_ID=B.BATCH_ID
AND U.ED01AI01=B.ED01AI01
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            ED01AI01,
            SUM(ISNULL(
                CASE
                    WHEN loan='installmen loan'
                    AND CAST(ISNULL(ED01BJ02,0) AS INT) > 0
                    THEN (
                            CASE
                                WHEN 实际还款总额*1.2 > 贷款月摊销金额估
                                THEN 贷款月摊销金额估
                                WHEN 实际还款总额*1.2 < 贷款月摊销金额估
                                THEN 实际还款总额
                            END )
                    WHEN loan='installmen loan'
                    AND CAST(ISNULL(ED01BJ02,0) AS INT) = 0
                    THEN 贷款月摊销金额估
                    WHEN loan='non-installment loan'
                    AND Tenor <= 1
                    THEN CAST((0.08*CAST(余额 AS INT))/12 AS DECIMAL(22,2))
                    WHEN loan='non-installment loan'
                    AND Tenor > 1
                    THEN (
                            CASE
                                WHEN DANBAO='Secured'
                                THEN CAST(0.02*CAST(授信额度 AS INT) AS DECIMAL(22,2))
                                WHEN DANBAO='Unsecured'
                                THEN CAST(CAST(授信额度 AS INT)/CAST(Tenor AS INT) AS DECIMAL(22,2))
                            END )
                END,0)) AS Monthly_Debt
        FROM
            (
                SELECT
                    *,
                    CASE
                        WHEN loan='installmen loan'
                        THEN CAST(余额*0.25*Power((1+0.25),ABS(摊销月数))/Power((1+0.25),ABS(摊销月数))-1 AS
                            DECIMAL)
                    END AS '贷款月摊销金额估'
                FROM
                    (
                        SELECT
                            A.BATCH_ID,
                            B.PARENTID,
                            CAST(B.ED01BJ02 AS INT) AS '实际还款总额',
                            CAST(B.ED01BJ01 AS INT) AS '余额',
                            B.ED01BR01              AS '信息报告日期',
                            A.ED01AR02              AS '到期日期',
                            CASE
                                WHEN A.ED01AD05='11'
                                AND CAST(A.ED01AJ01 AS INT)> CAST(B.ED01BJ01 AS INT)
                                THEN 'installmen loan'
                                WHEN A.ED01AD05='11'
                                AND CAST(A.ED01AJ01 AS INT) = CAST(B.ED01BJ01 AS INT)
                                THEN 'non-installment loan'
                                ELSE 'non-installment loan'
                            END AS loan,
                            CAST(DATEDIFF(MONTH,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01BR01
                            ,1,10),'.',''),'-',''),112), CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) AS INT) AS '摊销月数',
                            DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10)
                            ,'.',''),'-',''),112), CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) Tenor,
                            CASE
                                WHEN A.ED01AD08 IN ('0',
                                                    '1')
                                THEN 'Unsecured'
                                WHEN A.ED01AD08 IN ('2',
                                                    '3',
                                                    '4')
                                THEN 'Secured'
                                ELSE 'Secured'
                            END AS DANBAO,
                            C.maxyue,
                            C.ED01BJ02,
                            C.maxyue_1,
                            C.ED01BJ02_1,
                            D.ED060J01 AS '授信额度',
                            A.ED01AI01
                        FROM
                            CR_COM_ED01 A
                        LEFT JOIN
                            CR_COM_ED01BH B
                        ON
                            A.ID=B.PARENTID
                        LEFT JOIN
                            CR_COM_EDC D
                        ON
                            A.ID=D.ID
                        LEFT JOIN
                            (
                                SELECT
                                    AA.BATCH_ID,
                                    AA.PARENTID,
                                    AA.maxyue,
                                    AA.ED01BJ02,
                                    BB.maxyue_1,
                                    BB.ED01BJ02_1
                                FROM
                                    (
                                        SELECT
                                            a1.BATCH_ID,
                                            a1.PARENTID,
                                            b1.maxyue,
                                            a1.ED01BJ02
                                        FROM
                                            CR_COM_ED01BH a1
                                        LEFT JOIN
                                            (
                                                SELECT
                                                    b.BATCH_ID,
                                                    PARENTID,
                                                    MAX(CONVERT(VARCHAR(10),(substring(ED01BR04,1,4
                                                    )+'-'+
                                                    CASE
                                                        WHEN LEN(substring(REPLACE(substring
                                                            (ED01BR04,1,10),'.','-'),6,2))=2
                                                        THEN substring(REPLACE(substring(ED01BR04,1
                                                            ,10),'.','-'),6,2) +'-01'
                                                        ELSE '0'+substring(REPLACE(substring
                                                            (ED01BR04,1,10),'.','-'),6,2)+'-01'
                                                    END),120)) AS maxyue
                                                FROM
                                                    CR_COM_ED01BH b
                                                GROUP BY
                                                    BATCH_ID,
                                                    PARENTID) b1
                                        ON
                                            a1.BATCH_ID=b1.BATCH_ID
                                        AND a1.PARENTID=b1.PARENTID
                                        AND CONVERT(VARCHAR(10),(substring(a1.ED01BR04,1,4)+'-'+
                                            CASE
                                                WHEN LEN(substring(REPLACE(substring(a1.ED01BR04,1,
                                                    10),'.','-'),6,2))=2
                                                THEN substring(REPLACE(substring(a1.ED01BR04,1,10),
                                                    '.','-'),6,2) +'-01'
                                                ELSE '0'+substring(REPLACE(substring(a1.ED01BR04,1,
                                                    10),'.','-'),6,2)+'-01'
                                            END),120)=b1.maxyue
                                        WHERE
                                            b1.BATCH_ID IS NOT NULL) AA
                                LEFT JOIN
                                    (
                                        SELECT
                                            a1.BATCH_ID,
                                            a1.PARENTID,
                                            b1.maxyue   AS maxyue_1,
                                            a1.ED01BJ02 AS ED01BJ02_1
                                        FROM
                                            CR_COM_ED01BH a1
                                        LEFT JOIN
                                            (
                                                SELECT
                                                    b.BATCH_ID,
                                                    PARENTID,
                                                    MAX(CONVERT(VARCHAR(10),DATEADD(MONTH,-1,(
                                                        CASE
                                                            WHEN ED01BR04=''
                                                            OR  ED01BR04 IS NULL
                                                            THEN '1900-01-01'
                                                            ELSE substring(ED01BR04,1,4) +'-'+
                                                                (
                                                                    CASE
                                                                        WHEN LEN(substring(REPLACE
                                                                            (substring(ED01BR04,1,
                                                                            10),'.','-'),6,2))= 2
                                                                        THEN substring(REPLACE
                                                                            (substring(ED01BR04,1,
                                                                            10),'.','-'),6,2) +
                                                                            '-01'
                                                                        ELSE '0'+substring(REPLACE
                                                                            (substring(ED01BR04,1,
                                                                            10),'.','-'),6,2)+'-01'
                                                                    END)
                                                        END )),120)) AS maxyue
                                                FROM
                                                    CR_COM_ED01BH b
                                                GROUP BY
                                                    BATCH_ID,
                                                    PARENTID) b1
                                        ON
                                            a1.BATCH_ID=b1.BATCH_ID
                                        AND a1.PARENTID=b1.PARENTID
                                        AND CONVERT(VARCHAR(10),(
                                                CASE
                                                    WHEN a1.ED01BR04=''
                                                    OR  a1.ED01BR04 IS NULL
                                                    THEN '1900-01-01'
                                                    ELSE substring(a1.ED01BR04,1,4)+'-'+
                                                        CASE
                                                            WHEN LEN(substring(REPLACE(substring
                                                                (a1.ED01BR04,1,10),'.','-'),6,2))=2
                                                            THEN substring(REPLACE(substring
                                                                (a1.ED01BR04,1,10),'.','-'),6,2) +
                                                                '-01'
                                                            ELSE '0'+substring(REPLACE(substring
                                                                (a1.ED01BR04,1,10),'.','-'),6,2)+
                                                                '-01'
                                                        END
                                                END),120)=b1.maxyue
                                        WHERE
                                            b1.BATCH_ID IS NOT NULL ) BB
                                ON
                                    AA.BATCH_ID=BB.BATCH_ID
                                AND AA.PARENTID=BB.PARENTID ) C
                        ON
                            B.PARENTID=C.PARENTID
                        AND B.BATCH_ID=C.BATCH_ID ) b ) a
        GROUP BY
            BATCH_ID,
            ED01AI01) V
ON
    B.BATCH_ID=V.BATCH_ID
AND B.ED01AI01=V.ED01AI01
LEFT JOIN
    (
        SELECT
            batch_id,
            ED01AI01,
            SUM(CAST(ISNULL(
                CASE
                    WHEN DATEADD(MONTH,1,ED01AR01)=max_ED01BR02
                    THEN ED01BJ01
                    WHEN Tenor='短期负债'
                    AND ISNULL(ED060D03,'')='1'
                    THEN ED060J01
                    WHEN Tenor='短期负债'
                    AND ISNULL(ED060D03,'')='0'
                    THEN ED01BJ01
                    WHEN Tenor='短期负债'
                    AND ISNULL(ED060D03,'')=''
                    AND ED01AJ01=ED01BJ01
                    THEN ED01AJ01
                    WHEN Tenor='短期负债'
                    AND ISNULL(ED060D03,'')=''
                    AND ED01AJ01 > ED01BJ01
                    THEN ED01BJ01
                    WHEN Tenor='中期负债'
                    THEN ED01BJ01
                END,0) AS INT)) AS WC
        FROM
            (
                SELECT
                    A.BATCH_ID,
                    ED060D03,
                    A.ED01AI03,
                    ED01AJ01,
                    C.ED01BJ01,
                    ED01AR01,
                    max_ED01BR02,
                    B.ED060J01,
                    A.ED01AI01,
                    CASE
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) <=1
                        THEN '短期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) <=5
                        AND DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10)
                            ,'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) >1
                        THEN '中期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) >5
                        THEN '长期负债'
                    END AS Tenor
                FROM
                    CR_COM_ED01 A
                LEFT JOIN
                    CR_COM_EDC B
                ON
                    A.BATCH_ID=B.ID
                AND A.ED01AI03=B.ED060I01
                LEFT JOIN
                    (
                        SELECT
                            A1.ED01BJ01,
                            B1.PARENTID,
                            B1.max_ED01BR02
                        FROM
                            CR_COM_ED01BH A1
                        LEFT JOIN
                            (
                                SELECT
                                    MAX(ED01BR01) AS max_ED01BR01,
                                    MAX(ED01BR02) AS max_ED01BR02,
                                    PARENTID
                                FROM
                                    CR_COM_ED01BH
                                GROUP BY
                                    PARENTID) B1
                        ON
                            A1.PARENTID=B1.PARENTID
                        AND A1.ED01BR01=B1.max_ED01BR01
                        WHERE
                            B1.PARENTID IS NOT NULL) C
                ON
                    A.ID=C.PARENTID
                LEFT JOIN
                    (
                        SELECT
                            BATCH_ID,
                            ED01AI03,
                            COUNT(*) AS COUNT
                        FROM
                            (
                                SELECT
                                    BATCH_ID,
                                    ED01AI03
                                FROM
                                    CR_COM_ED01
                                UNION ALL
                                SELECT
                                    BATCH_ID,
                                    ED04AI03 AS ED01AI03
                                FROM
                                    CR_COM_ED04 ) A
                        WHERE
                            ED01AI03<>''
                        GROUP BY
                            BATCH_ID,
                            ED01AI03 ) D
                ON
                    A.BATCH_ID=D.BATCH_ID
                AND A.ED01AI03=D.ED01AI03
                AND ISNULL(COUNT,0) <= 1
                WHERE
                    ED01AD05 IN ('10',
                                 '11',
                                 '12',
                                 '13',
                                 '15',
                                 '31',
                                 '41',
                                 '51') ) A
        WHERE
            Tenor IN ('短期负债',
                      '中期负债')
        GROUP BY
            batch_id,
            ED01AI01 ) Y
ON
    Y.BATCH_ID=B.BATCH_ID
AND Y.ED01AI01=B.ED01AI01;


ALTER VIEW
    IBS_ENT_CREDIT_SUM
    (
        报表序号,
        企业名称,
        查询日期,
        是否白户,
        有无逾期_欠息,
        当前关注类_不良类负债笔数,
        当前关注类_不良类负债余额,
        历史关注类_不良类_逾期类负债笔数,
        历史关注类_不良类_逾期类负债额,
        负面信息,
        报告编码,
        中征码,
        企业征信类别,
        当前贷款笔数,
        当前贷款机构数,
        当前贷款总额度,
        当前贷款已用额度,
        当前贷款总余额,
        当前被追偿业务笔数,
        当前被追偿业务余额,
        当前相关还款责任笔数,
        当前相关还款责任余额,
        当前最差五级分类,
        当前逾期总额,
        当前逾期本金,
        当前关注类笔数,
        当前关注类金额,
        当前损失类笔数,
        当前损失类金额,
        曾经损失类笔数,
        曾经损失类金额,
        近九月不良笔数,
        近九月不良金额,
        TUE,
        DSR,
        WC,
        Total_Bank_Limit
    ) AS
SELECT
    A.ID                     AS 报表序号,
    EA01CQ01                 AS 企业名称,
    SUBSTRING(EA01AR01,1,10) AS 查询日期,
    CASE
        WHEN B.EB02CR01 >= substring(CONVERT(VARCHAR(10),DATEADD(MONTH,-12,GETDATE()),120),1,7)
        THEN '是'
        ELSE '否'
    END AS 是否白户 ,
    CASE
        WHEN C.EB02AJ03 <> 0
        THEN '有'
        ELSE '无'
    END                                                AS '有无逾期_欠息',
    ISNULL(WJFL.BISHU,0)+ISNULL(NOW_WJFL.WJFL,0)       AS '当前关注类_不良类负债笔数',
    ISNULL(WJFL.Balance,0)+ISNULL(NOW_WJFL.ED01AJ01,0) AS '当前关注类_不良类负债余额',
    ISNULL(WJFL.BISHU,0)+ISNULL(OLD_WJFL.WJFL,0)       AS '历史关注类_不良类_逾期类负债笔数',
    ISNULL(WJFL.Balance,0)+ISNULL(OLD_WJFL.ED01AJ01,0) AS '历史关注类_不良类_逾期类负债额',
    CASE
        WHEN EBA.EB01BS02<>''
        AND EBA.EB01BS02 IS NOT NULL
        AND EBA.EB01BS02<>0
        THEN 'YES欠税记录'
        ELSE 'NO欠税记录'
    END +'/'+
    CASE
        WHEN EBA.EB01BS03<>''
        AND EBA.EB01BS03 IS NOT NULL
        AND EBA.EB01BS03<>0
        THEN 'YES民事判决记录'
        ELSE 'NO民事判决记录'
    END +'/'+
    CASE
        WHEN EBA.EB01BS04<>''
        AND EBA.EB01BS04 IS NOT NULL
        AND EBA.EB01BS04 <>0
        THEN 'YES强制执行记录'
        ELSE 'NO强制执行记录'
    END +'/'+
    CASE
        WHEN EBA.EB01BS05<>''
        AND EBA.EB01BS05 IS NOT NULL
        AND EBA.EB01BS05<>0
        THEN 'YES行政处罚记录'
        ELSE 'NO行政处罚记录'
    END        AS '负面信息',
    A.EA01AI01 AS '报告编码',
    D.EA01CI01 AS '中征码',
    CASE
        WHEN B.EB02CR01 >= substring(CONVERT(VARCHAR(10),DATEADD(MONTH,-12,GETDATE()),120),1,7)
        THEN '非白'
        WHEN B.EB02CR01 < substring(CONVERT(VARCHAR(10),DATEADD(MONTH,-12,GETDATE()),120),1,7)
        THEN '小白'
        ELSE '大白'
    END AS '企业征信类别',
    CAST(ISNULL(E.EB02AS04,0) AS INT) + CAST(ISNULL(EB02AS01,0) AS INT)+CAST(ISNULL(EB02AS02,0) AS
    INT)+ CAST(ISNULL(F.EB05AS02,0) AS INT)+CAST(ISNULL(EB05AS03,0) AS INT) AS '当前贷款笔数',
    G.EB01AS02                                                              AS '当前贷款机构数',
    H.EB040J01                                                              AS '当前贷款总额度',
    H.EB040J02                                                              AS '当前贷款已用额度',
    G.EB01AJ01                                                              AS '当前贷款总余额',
    CAST(C.EB02AS01 AS INT)+CAST(C.EB02AS02 AS INT)                         AS '当前被追偿业务笔数',
    CAST(C.EB02AJ01 AS INT)+CAST(C.EB02AJ02 AS INT)                         AS '当前被追偿业务余额',
    EB05.EB05AS02                                                           AS '当前相关还款责任笔数',
    EB05.EB05AJ02                                                           AS '当前相关还款责任余额',
    ISNULL(D1.ED01BD01_MAX,'')                                              AS '当前最差五级分类',
    CAST(ISNULL(C.EB02AJ03,0) AS INT )                                      AS '当前逾期总额',
    CAST(ISNULL(C.EB02AJ04,0) AS INT)                                       AS '当前逾期本金',
    CAST(ISNULL(P.EB02AS04,0) AS INT)                                       AS '当前关注类笔数',
    CAST(ISNULL(P.EB02AJ06,0) AS INT)                                       AS '当前关注类金额',
    ISNULL((
            CASE
                WHEN R.wuji='5'
                THEN (
                        CASE
                            WHEN R.bishu=''
                            THEN 0
                            ELSE ISNULL(R.bishu,0)
                        END )
            END),0) + ISNULL(Q.SHUNSHI,0) AS '当前损失类笔数',
    ISNULL((
            CASE
                WHEN R.wuji='5'
                THEN (
                        CASE
                            WHEN R.Balance=''
                            THEN 0
                            ELSE ISNULL(R.Balance,0)
                        END )
            END),0) +ISNULL(Q.ED01AJ01,0) AS '当前损失类金额',
    ISNULL((
            CASE
                WHEN R.wuji='5'
                THEN (
                        CASE
                            WHEN R.bishu=''
                            THEN 0
                            ELSE ISNULL(R.bishu,0)
                        END )
            END),0) + ISNULL(S.SHUNSHI,0) AS '曾经损失类笔数',
    ISNULL((
            CASE
                WHEN R.wuji='5'
                THEN (
                        CASE
                            WHEN R.Balance=''
                            THEN 0
                            ELSE ISNULL(R.Balance,0)
                        END )
            END),0) +ISNULL(S.ED01AJ01,0)     AS '曾经损失类金额',
    CAST(ISNULL(T.BISHU,0) AS INT)            AS '近九月不良笔数',
    CAST(ISNULL(T.ED01AJ01,0) AS INT)         AS '近九月不良金额',
    CAST(ISNULL(U.ED01BJ01,0) AS VARCHAR(30)) AS TUE,
    CAST(CAST(ISNULL(V.Monthly_Debt,0) AS INT)+ CAST(ISNULL(W.danbao,0) AS INT)+ CAST(ISNULL
    (X.ED090J03, 0) AS INT) AS VARCHAR(30)) AS DSR,
    CAST(ISNULL(Y.WC,0)+ISNULL(Z.ED020J01,0)+ISNULL(AA.ED060J01,0)+ISNULL(AB.ED060J01_2,0)+ISNULL
    (AC.WC_2,0) AS VARCHAR(30))                             AS WC,
    ISNULL(AD.WC,0)+ISNULL(AE.ED060J01,0)+ISNULL(AF.WC_2,0) AS Total_Bank_Limit
FROM
    CR_COM_EAA A
LEFT JOIN
    CR_COM_EBA EBA
ON
    A.ID=EBA.ID
LEFT JOIN
    (
        SELECT
            A2.BATCH_ID,
            SUM(CAST(ISNULL(ED01AJ01,0) AS INT)) AS ED01AJ01,
            COUNT(1)                             AS WJFL
        FROM
            CR_COM_ED01 A2
        LEFT JOIN
            CR_COM_ED01BH B2
        ON
            A2.ID=B2.PARENTID
        AND ED01BR01=
            (
                SELECT
                    MAX(ED01BR01)
                FROM
                    CR_COM_ED01BH
                WHERE
                    PARENTID=A2.ID)
        WHERE
            (
                ED01AD02 IN ('D1',
                             'R4',
                             'R1',
                             'D2')
            OR  ED01AD05 IN ('41',
                             '51'))
        AND ED01BD01<>'5'
        GROUP BY
            A2.BATCH_ID ) NOW_WJFL
ON
    A.ID= NOW_WJFL.BATCH_ID
LEFT JOIN
    (
        SELECT
            A2.BATCH_ID,
            SUM(CAST(ISNULL(ED01AJ01,0) AS INT)) AS ED01AJ01,
            COUNT(1)                             AS WJFL
        FROM
            CR_COM_ED01 A2
        LEFT JOIN
            CR_COM_ED01BH B2
        ON
            A2.ID=B2.PARENTID
        AND ED01BR01<
            (
                SELECT
                    MAX(ED01BR01)
                FROM
                    CR_COM_ED01BH
                WHERE
                    PARENTID=A2.ID)
        WHERE
            (
                ED01AD02 IN ('D1',
                             'R4',
                             'R1',
                             'D2')
            OR  ED01AD05 IN ('41',
                             '51'))
        AND ED01BD01<>'5'
        GROUP BY
            A2.BATCH_ID) OLD_WJFL
ON
    A.ID= OLD_WJFL.BATCH_ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            SUM(Balance) AS Balance,
            COUNT(1)     AS bishu
        FROM
            (
                SELECT
                    BATCH_ID,
                    CAST(ISNULL(ED070J02,0) AS INT) AS Balance
                FROM
                    CR_COM_ED07
                WHERE
                    ED070D08 IN ('2',
                                 '3',
                                 '4',
                                 '5')
                UNION ALL
                SELECT
                    BATCH_ID,
                    CAST(ISNULL(ED080J02,0) AS INT) AS Balance
                FROM
                    CR_COM_ED08
                WHERE
                    ED080D04 IN ('2',
                                 '3',
                                 '4',
                                 '5') ) A
        GROUP BY
            BATCH_ID) WJFL
ON
    A.ID=WJFL.BATCH_ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            SUM(CAST(EB05AS02 AS INT)) AS EB05AS02 ,
            SUM(CAST(EB05AJ02 AS INT)) AS EB05AJ02
        FROM
            CR_COM_EB05AH A1
        GROUP BY
            BATCH_ID) EB05
ON
    A.ID=EB05.BATCH_ID
LEFT JOIN
    (
        SELECT
            MAX(EB02CR01) AS EB02CR01,
            BATCH_ID
        FROM
            CR_COM_EB02CH
        GROUP BY
            BATCH_ID) B
ON
    A.ID=B.BATCH_ID
LEFT JOIN
    CR_COM_EBB C
ON
    A.ID=C.ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            EA01CI01
        FROM
            CR_COM_EA01CH
        WHERE
            EA01CD01='10') D
ON
    A.ID=D.BATCH_ID
LEFT JOIN
    (
        SELECT
            MAX(ED01BD01) AS ED01BD01_MAX,
            BATCH_ID
        FROM
            CR_COM_ED01BH
        GROUP BY
            BATCH_ID) D1
ON
    A.ID=D1.BATCH_ID
LEFT JOIN
    (
        SELECT
            EB02AS04,
            BATCH_ID
        FROM
            CR_COM_EB02AH
        WHERE
            EB02AD01='0'
        AND EB02AD02='0') E
ON
    A.ID=E.BATCH_ID
LEFT JOIN
    (
        SELECT
            *
        FROM
            CR_com_EB05AH
        WHERE
            EB05AD01='1') F
ON
    A.ID=F.BATCH_ID
LEFT JOIN
    CR_COM_EBA G
ON
    A.ID=G.ID
LEFT JOIN
    CR_COM_EBD H
ON
    A.ID=H.ID
LEFT JOIN
    (
        SELECT
            AA.BATCH_ID,
            SUM(CAST(BB.ED01BJ04 AS INT)) AS ED01BJ04,
            SUM(CAST(BB.ED01BJ05 AS INT)) AS ED01BJ05
        FROM
            CR_COM_ED01 AA
        LEFT JOIN
            CR_COM_ED01BH BB
        ON
            AA.ID=BB.PARENTID
        WHERE
            (
                AA.ED01AD03 IN ('10',
                                '20',
                                '30')
            AND ED01AD02 IN ('D1',
                             'R4')
            AND BB.ED01BS02 >0 )
        OR  (
                ED01AD02 IN ('R1',
                             'D2')
            AND BB.ED01BS02 > 0)
        GROUP BY
            AA.BATCH_ID) I
ON
    A.ID=I.BATCH_ID
LEFT JOIN
    CR_COM_ED08 J
ON
    A.ID=J.BATCH_ID
AND J.ED080J03<>0
LEFT JOIN
    CR_COM_ED07 K
ON
    A.ID=K.BATCH_ID
AND K.ED070S01> 0
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            SUM(CAST(ISNULL(ED01AJ01,0) AS INT)) AS ED01AJ01,
            SUM(CAST(ISNULL(ED01AJ02,0) AS INT)) AS ED01AJ02
        FROM
            CR_COM_ED01
        WHERE
            ED01AD05 IN ('41',
                         '51')
        GROUP BY
            BATCH_ID) O
ON
    A.ID =O.BATCH_ID
LEFT JOIN
    CR_COM_EB02AH P
ON
    A.ID=P.BATCH_ID
AND P.EB02AD01='0'
AND P.EB02AD02='2'
LEFT JOIN
    (
        SELECT
            A2.BATCH_ID,
            SUM(CAST(ISNULL(ED01AJ01,0) AS INT)) AS ED01AJ01,
            COUNT(1)                             AS SHUNSHI
        FROM
            CR_COM_ED01 A2
        LEFT JOIN
            CR_COM_ED01BH B2
        ON
            A2.ID=B2.PARENTID
        AND ED01BR01=
            (
                SELECT
                    MAX(ED01BR01)
                FROM
                    CR_COM_ED01BH
                WHERE
                    PARENTID=A2.ID)
        WHERE
            (
                ED01AD02 IN ('D1',
                             'R4',
                             'R1',
                             'D2')
            OR  ED01AD05 IN ('41',
                             '51'))
        AND ED01BD01='5'
        GROUP BY
            A2.BATCH_ID ) Q
ON
    A.ID=Q.BATCH_ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            wuji,
            SUM(Balance) AS Balance,
            COUNT(1)     AS bishu
        FROM
            (
                SELECT
                    BATCH_ID,
                    ED070D08                        AS wuji,
                    CAST(ISNULL(ED070J02,0) AS INT) AS Balance
                FROM
                    CR_COM_ED07
                WHERE
                    ED070D08 IN ('2',
                                 '5')
                UNION ALL
                SELECT
                    BATCH_ID,
                    ED080D04                        AS wuji,
                    CAST(ISNULL(ED080J02,0) AS INT) AS Balance
                FROM
                    CR_COM_ED08
                WHERE
                    ED080D04 IN ('2',
                                 '5') ) A
        GROUP BY
            BATCH_ID,
            wuji) R
ON
    R.BATCH_ID=A.ID
LEFT JOIN
    (
        SELECT
            A2.BATCH_ID,
            SUM(CAST(ISNULL(ED01AJ01,0) AS INT)) AS ED01AJ01,
            COUNT(1)                             AS SHUNSHI
        FROM
            CR_COM_ED01 A2
        LEFT JOIN
            CR_COM_ED01BH B2
        ON
            A2.ID=B2.PARENTID
        AND ED01BR01<
            (
                SELECT
                    MAX(ED01BR01)
                FROM
                    CR_COM_ED01BH
                WHERE
                    PARENTID=A2.ID)
        WHERE
            (
                ED01AD02 IN ('D1',
                             'R4',
                             'R1',
                             'D2')
            OR  ED01AD05 IN ('41',
                             '51'))
        AND ED01BD01='5'
        GROUP BY
            A2.BATCH_ID ) S
ON
    A.ID=S.BATCH_ID
LEFT JOIN
    (
        SELECT
            A2.BATCH_ID,
            SUM(CAST(ISNULL(ED01AJ01,0) AS INT)) AS ED01AJ01,
            COUNT(1)                             AS BISHU
        FROM
            CR_COM_ED01 A2
        LEFT JOIN
            CR_COM_ED01BH B2
        ON
            A2.ID=B2.PARENTID
        WHERE
            (
                ED01AD02 IN ('D1',
                             'R4',
                             'R1',
                             'D2')
            OR  ED01AD05 IN ('41',
                             '51'))
        AND ED01BD01 IN ('3',
                         '4',
                         '5')
        AND ED01BR01 > DATEADD(MONTH,-9,ED01BR01)
        GROUP BY
            A2.BATCH_ID ) T
ON
    A.ID=T.BATCH_ID
LEFT JOIN
    (
        SELECT
            AA.BATCH_ID,
            SUM(AA.ED01BJ01) AS ED01BJ01
        FROM
            (
                SELECT
                    A1.batch_id,
                    CASE
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) <=1
                        THEN '短期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) <=5
                        AND DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10)
                            ,'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) >1
                        THEN '中期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) >5
                        THEN '长期负债'
                    END AS Tenor,
                    CASE
                        WHEN ED01AD08 IN ('0',
                                          '1')
                        THEN 'Unsecured'
                        WHEN ED01AD08 IN ('2',
                                          '3')
                        THEN 'Secured'
                    END                                             AS DANBAO,
                    CAST(REPLACE(ISNULL(ED01BJ01,0),',','') AS INT) AS ED01BJ01
                FROM
                    CR_COM_ED01 A1
                LEFT JOIN
                    CR_COM_ED01BH A2
                ON
                    A1.ID=A2.PARENTID
                WHERE
                    ED01AD01 <>'2'
                AND ED01AD02 IN ('D1',
                                 'R1',
                                 'R4')) AA
        WHERE
            AA.DANBAO='Unsecured'
        AND AA.Tenor IN ('长期负债',
                         '中期负债')
        GROUP BY
            AA.BATCH_ID) U
ON
    A.ID=U.BATCH_ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            SUM(ISNULL(
                CASE
                    WHEN loan='installmen loan'
                    AND CAST(ISNULL(ED01BJ02,0) AS INT) > 0
                    THEN (
                            CASE
                                WHEN 实际还款总额*1.2 > 贷款月摊销金额估
                                THEN 贷款月摊销金额估
                                WHEN 实际还款总额*1.2 < 贷款月摊销金额估
                                THEN 实际还款总额
                            END )
                    WHEN loan='installmen loan'
                    AND CAST(ISNULL(ED01BJ02,0) AS INT) = 0
                    THEN 贷款月摊销金额估
                    WHEN loan='non-installment loan'
                    AND Tenor <= 1
                    THEN CAST((0.08*CAST(余额 AS INT))/12 AS DECIMAL(22,2))
                    WHEN loan='non-installment loan'
                    AND Tenor > 1
                    THEN (
                            CASE
                                WHEN DANBAO='Secured'
                                THEN CAST(0.02*CAST(授信额度 AS INT) AS DECIMAL(22,2))
                                WHEN DANBAO='Unsecured'
                                THEN CAST(CAST(授信额度 AS INT)/CAST(Tenor AS INT) AS DECIMAL(22,2))
                            END )
                END,0)) AS Monthly_Debt
        FROM
            (
                SELECT
                    *,
                    CASE
                        WHEN loan='installmen loan'
                        THEN CAST(余额*0.25*Power((1+0.25),ABS(摊销月数))/Power((1+0.25),ABS(摊销月数))-1 AS
                            DECIMAL)
                    END AS '贷款月摊销金额估'
                FROM
                    (
                        SELECT
                            A.BATCH_ID,
                            B.PARENTID,
                            CAST(B.ED01BJ02 AS INT) AS '实际还款总额',
                            CAST(B.ED01BJ01 AS INT) AS '余额',
                            B.ED01BR01              AS '信息报告日期',
                            A.ED01AR02              AS '到期日期',
                            CASE
                                WHEN A.ED01AD05='11'
                                AND CAST(A.ED01AJ01 AS INT)> CAST(B.ED01BJ01 AS INT)
                                THEN 'installmen loan'
                                WHEN A.ED01AD05='11'
                                AND CAST(A.ED01AJ01 AS INT) = CAST(B.ED01BJ01 AS INT)
                                THEN 'non-installment loan'
                                ELSE 'non-installment loan'
                            END AS loan,
                            CAST(DATEDIFF(MONTH,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01BR01
                            ,1,10),'.',''),'-',''),112), CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) AS INT) AS '摊销月数',
                            DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10)
                            ,'.',''),'-',''),112), CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) Tenor,
                            CASE
                                WHEN A.ED01AD08 IN ('0',
                                                    '1')
                                THEN 'Unsecured'
                                WHEN A.ED01AD08 IN ('2',
                                                    '3',
                                                    '4')
                                THEN 'Secured'
                                ELSE 'Secured'
                            END AS DANBAO,
                            C.maxyue,
                            C.ED01BJ02,
                            C.maxyue_1,
                            C.ED01BJ02_1,
                            D.ED060J01 AS '授信额度'
                        FROM
                            CR_COM_ED01 A
                        LEFT JOIN
                            CR_COM_ED01BH B
                        ON
                            A.ID=B.PARENTID
                        LEFT JOIN
                            CR_COM_EDC D
                        ON
                            A.ID=D.ID
                        LEFT JOIN
                            (
                                SELECT
                                    AA.BATCH_ID,
                                    AA.PARENTID,
                                    AA.maxyue,
                                    AA.ED01BJ02,
                                    BB.maxyue_1,
                                    BB.ED01BJ02_1
                                FROM
                                    (
                                        SELECT
                                            a1.BATCH_ID,
                                            a1.PARENTID,
                                            b1.maxyue,
                                            a1.ED01BJ02
                                        FROM
                                            CR_COM_ED01BH a1
                                        LEFT JOIN
                                            (
                                                SELECT
                                                    b.BATCH_ID,
                                                    PARENTID,
                                                    MAX(CONVERT(VARCHAR(10),(substring(ED01BR04,1,4
                                                    )+'-'+
                                                    CASE
                                                        WHEN LEN(substring(REPLACE(substring
                                                            (ED01BR04,1,10),'.','-'),6,2))=2
                                                        THEN substring(REPLACE(substring(ED01BR04,1
                                                            ,10),'.','-'),6,2) +'-01'
                                                        ELSE '0'+substring(REPLACE(substring
                                                            (ED01BR04,1,10),'.','-'),6,2)+'-01'
                                                    END),120)) AS maxyue
                                                FROM
                                                    CR_COM_ED01BH b
                                                GROUP BY
                                                    BATCH_ID,
                                                    PARENTID) b1
                                        ON
                                            a1.BATCH_ID=b1.BATCH_ID
                                        AND a1.PARENTID=b1.PARENTID
                                        AND CONVERT(VARCHAR(10),(substring(a1.ED01BR04,1,4)+'-'+
                                            CASE
                                                WHEN LEN(substring(REPLACE(substring(a1.ED01BR04,1,
                                                    10),'.','-'),6,2))=2
                                                THEN substring(REPLACE(substring(a1.ED01BR04,1,10),
                                                    '.','-'),6,2) +'-01'
                                                ELSE '0'+substring(REPLACE(substring(a1.ED01BR04,1,
                                                    10),'.','-'),6,2)+'-01'
                                            END),120)=b1.maxyue
                                        WHERE
                                            b1.BATCH_ID IS NOT NULL) AA
                                LEFT JOIN
                                    (
                                        SELECT
                                            a1.BATCH_ID,
                                            a1.PARENTID,
                                            b1.maxyue   AS maxyue_1,
                                            a1.ED01BJ02 AS ED01BJ02_1
                                        FROM
                                            CR_COM_ED01BH a1
                                        LEFT JOIN
                                            (
                                                SELECT
                                                    b.BATCH_ID,
                                                    PARENTID,
                                                    MAX(CONVERT(VARCHAR(10),DATEADD(MONTH,-1,(
                                                        CASE
                                                            WHEN ED01BR04=''
                                                            OR  ED01BR04 IS NULL
                                                            THEN '1900-01-01'
                                                            ELSE substring(ED01BR04,1,4) +'-'+
                                                                (
                                                                    CASE
                                                                        WHEN LEN(substring(REPLACE
                                                                            (substring(ED01BR04,1,
                                                                            10),'.','-'),6,2))= 2
                                                                        THEN substring(REPLACE
                                                                            (substring(ED01BR04,1,
                                                                            10),'.','-'),6,2) +
                                                                            '-01'
                                                                        ELSE '0'+substring(REPLACE
                                                                            (substring(ED01BR04,1,
                                                                            10),'.','-'),6,2)+'-01'
                                                                    END)
                                                        END )),120)) AS maxyue
                                                FROM
                                                    CR_COM_ED01BH b
                                                GROUP BY
                                                    BATCH_ID,
                                                    PARENTID) b1
                                        ON
                                            a1.BATCH_ID=b1.BATCH_ID
                                        AND a1.PARENTID=b1.PARENTID
                                        AND CONVERT(VARCHAR(10),(
                                                CASE
                                                    WHEN a1.ED01BR04=''
                                                    OR  a1.ED01BR04 IS NULL
                                                    THEN '1900-01-01'
                                                    ELSE substring(a1.ED01BR04,1,4)+'-'+
                                                        CASE
                                                            WHEN LEN(substring(REPLACE(substring
                                                                (a1.ED01BR04,1,10),'.','-'),6,2))=2
                                                            THEN substring(REPLACE(substring
                                                                (a1.ED01BR04,1,10),'.','-'),6,2) +
                                                                '-01'
                                                            ELSE '0'+substring(REPLACE(substring
                                                                (a1.ED01BR04,1,10),'.','-'),6,2)+
                                                                '-01'
                                                        END
                                                END),120)=b1.maxyue
                                        WHERE
                                            b1.BATCH_ID IS NOT NULL ) BB
                                ON
                                    AA.BATCH_ID=BB.BATCH_ID
                                AND AA.PARENTID=BB.PARENTID ) C
                        ON
                            B.PARENTID=C.PARENTID
                        AND B.BATCH_ID=C.BATCH_ID ) b ) a
        GROUP BY
            BATCH_ID) V
ON
    A.ID=V.BATCH_ID
LEFT JOIN
    (
        SELECT
            A.BATCH_ID,
            SUM(0.08*CAST(ISNULL(B.ED04BJ02,0) AS INT)/12) AS danbao
        FROM
            CR_COM_ED04 A
        LEFT JOIN
            CR_COM_ED04B B
        ON
            A.ID=B.PARENT_ID
        WHERE
            ED04AD02 IN ('51',
                         '61',
                         '71',
                         '72')
        GROUP BY
            A.BATCH_ID) W
ON
    A.ID=W.BATCH_ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            SUM((0.08*0.4*CAST(ISNULL(ED090J03,0) AS INT))/12) AS ED090J03
        FROM
            CR_COM_ED09
        WHERE
            ED090D01='2'
        GROUP BY
            BATCH_ID) X
ON
    A.ID=X.BATCH_ID
LEFT JOIN
    (
        SELECT
            batch_id,
            SUM(CAST(ISNULL(
                CASE
                    WHEN DATEADD(MONTH,1,ED01AR01)=max_ED01BR02
                    THEN ED01BJ01
                    WHEN Tenor='短期负债'
                    AND ISNULL(ED060D03,'')='1'
                    THEN ED060J01
                    WHEN Tenor='短期负债'
                    AND ISNULL(ED060D03,'')='0'
                    THEN ED01BJ01
                    WHEN Tenor='短期负债'
                    AND ISNULL(ED060D03,'')=''
                    AND ED01AJ01=ED01BJ01
                    THEN ED01AJ01
                    WHEN Tenor='短期负债'
                    AND ISNULL(ED060D03,'')=''
                    AND ED01AJ01 > ED01BJ01
                    THEN ED01BJ01
                    WHEN Tenor='中期负债'
                    THEN ED01BJ01
                END,0) AS INT)) AS WC
        FROM
            (
                SELECT
                    A.BATCH_ID,
                    ED060D03,
                    A.ED01AI03,
                    ED01AJ01,
                    C.ED01BJ01,
                    ED01AR01,
                    max_ED01BR02,
                    B.ED060J01,
                    CASE
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) <=1
                        THEN '短期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) <=5
                        AND DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10)
                            ,'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) >1
                        THEN '中期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) >5
                        THEN '长期负债'
                    END AS Tenor
                FROM
                    CR_COM_ED01 A
                LEFT JOIN
                    CR_COM_EDC B
                ON
                    A.BATCH_ID=B.ID
                AND A.ED01AI03=B.ED060I01
                LEFT JOIN
                    (
                        SELECT
                            A1.ED01BJ01,
                            B1.PARENTID,
                            B1.max_ED01BR02
                        FROM
                            CR_COM_ED01BH A1
                        LEFT JOIN
                            (
                                SELECT
                                    MAX(ED01BR02) max_ED01BR02,
                                    PARENTID
                                FROM
                                    CR_COM_ED01BH
                                GROUP BY
                                    PARENTID) B1
                        ON
                            A1.PARENTID=B1.PARENTID
                        AND A1.ED01BR02=B1.max_ED01BR02
                        WHERE
                            B1.PARENTID IS NOT NULL) C
                ON
                    A.ID=C.PARENTID
                LEFT JOIN
                    (
                        SELECT
                            BATCH_ID,
                            ED01AI03,
                            COUNT(*) AS COUNT
                        FROM
                            (
                                SELECT
                                    BATCH_ID,
                                    ED01AI03
                                FROM
                                    CR_COM_ED01
                                UNION ALL
                                SELECT
                                    BATCH_ID,
                                    ED04AI03 AS ED01AI03
                                FROM
                                    CR_COM_ED04 ) A
                        WHERE
                            ED01AI03<>''
                        GROUP BY
                            BATCH_ID,
                            ED01AI03 ) D
                ON
                    A.BATCH_ID=D.BATCH_ID
                AND A.ED01AI03=D.ED01AI03
                AND ISNULL(COUNT,0) <= 1
                WHERE
                    ED01AD05 IN ('10',
                                 '11',
                                 '12',
                                 '13',
                                 '15',
                                 '31',
                                 '41',
                                 '51') ) A
        WHERE
            Tenor IN ('短期负债',
                      '中期负债')
        GROUP BY
            batch_id) Y
ON
    Y.BATCH_ID=A.ID
LEFT JOIN
    (
        SELECT
            A.BATCH_ID,
            SUM(CAST(REPLACE(ISNULL(ED020J01,0),',','') AS INT)) AS ED020J01
        FROM
            CR_COM_ED02 A
        LEFT JOIN
            (
                SELECT
                    BATCH_ID,
                    ED01AI03,
                    COUNT(1) AS COUNT
                FROM
                    (
                        SELECT
                            BATCH_ID,
                            ED01AI03
                        FROM
                            CR_COM_ED01
                        UNION ALL
                        SELECT
                            BATCH_ID,
                            ED04AI03 AS ED01AI03
                        FROM
                            CR_COM_ED04 ) a
                WHERE
                    ED01AI03<>''
                GROUP BY
                    BATCH_ID,
                    ED01AI03) B
        ON
            A.BATCH_ID=B.BATCH_ID
        AND ISNULL(B.COUNT,0) <= 1
        WHERE
            ED020D02 ='10'
        GROUP BY
            A.BATCH_ID) Z
ON
    A.ID=Z.BATCH_ID
LEFT JOIN
    (
        SELECT
            A3.BATCH_ID,
            SUM(CAST(REPLACE(ISNULL(C3.ED060J01,0),',','') AS INT)) AS ED060J01
        FROM
            (
                SELECT
                    BATCH_ID,
                    ED01AI03
                FROM
                    dbo.CR_COM_ED01 A
                WHERE
                    ED01AD05='16'
                OR  (
                        ED01AD05='21'
                    AND ED01AD06='20')
                UNION ALL
                SELECT
                    ID       AS BATCH_ID,
                    ED04AI03 AS ED01AI03
                FROM
                    dbo.CR_COM_EDB B
                WHERE
                    ED04AD03 IN ('51',
                                 '61')) A3
        LEFT JOIN
            CR_COM_EDC C3
        ON
            A3.BATCH_ID=C3.ID
        AND A3.ED01AI03=C3.ED060I01
        LEFT JOIN
            (
                SELECT
                    BATCH_ID,
                    ED01AI03,
                    COUNT(1) AS COUNT
                FROM
                    (
                        SELECT
                            BATCH_ID,
                            ED01AI03
                        FROM
                            CR_COM_ED01
                        UNION ALL
                        SELECT
                            BATCH_ID,
                            ED04AI03 AS ED01AI03
                        FROM
                            CR_COM_ED04 ) a
                WHERE
                    ED01AI03<>''
                GROUP BY
                    BATCH_ID,
                    ED01AI03) B3
        ON
            A3.BATCH_ID=B3.BATCH_ID
        AND ISNULL(B3.COUNT,0) <= 1
        GROUP BY
            A3.BATCH_ID ) AA
ON
    AA.BATCH_ID=A.ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            SUM(ED060J01) AS ED060J01_2
        FROM
            (
                SELECT DISTINCT
                    A3.BATCH_ID,
                    CAST(REPLACE(ISNULL(C3.ED060J01,0),',','') AS INT) AS ED060J01
                FROM
                    (
                        SELECT
                            BATCH_ID,
                            ED01AI03
                        FROM
                            dbo.CR_COM_ED01 A
                        WHERE
                            ED01AD05='16'
                        OR  (
                                ED01AD05='21'
                            AND ED01AD06='20')
                        UNION ALL
                        SELECT
                            ID       AS BATCH_ID,
                            ED04AI03 AS ED01AI03
                        FROM
                            dbo.CR_COM_EDB B
                        WHERE
                            ED04AD03 IN ('51',
                                         '61')) A3
                LEFT JOIN
                    CR_COM_EDC C3
                ON
                    A3.BATCH_ID=C3.ID
                AND A3.ED01AI03=C3.ED060I01
                LEFT JOIN
                    (
                        SELECT
                            BATCH_ID,
                            ED01AI03,
                            COUNT(1) AS COUNT
                        FROM
                            (
                                SELECT
                                    BATCH_ID,
                                    ED01AI03
                                FROM
                                    CR_COM_ED01
                                UNION ALL
                                SELECT
                                    BATCH_ID,
                                    ED04AI03 AS ED01AI03
                                FROM
                                    CR_COM_ED04 ) a
                        WHERE
                            ED01AI03<>''
                        GROUP BY
                            BATCH_ID,
                            ED01AI03) B3
                ON
                    A3.BATCH_ID=B3.BATCH_ID
                AND ISNULL(B3.COUNT,0) > 1 ) a
        GROUP BY
            BATCH_ID) AB
ON
    A.ID=AB.BATCH_ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            SUM(
                CASE
                    WHEN Tenor='短期负债'
                    AND xunhuan='循环'
                    THEN CAST(ISNULL(ED060J01,0) AS INT)
                    WHEN Tenor='短期负债'
                    AND xunhuan='非循环'
                    THEN CAST(ISNULL(ED01BJ01,0) AS INT)
                    WHEN Tenor='中期负债'
                    THEN CAST(ISNULL(ED01BJ01,0) AS INT)
                END) AS WC_2
        FROM
            (
                SELECT DISTINCT
                    A.BATCH_ID,
                    A.ED01AI01,
                    A.ED01AI03,
                    B.ED060J01,
                    C.ED01BJ01,
                    CASE
                        WHEN ISNULL(ED060D03,'')='1'
                        THEN '循环'
                        WHEN ISNULL(ED060D03,'')='0'
                        THEN '非循环'
                        WHEN DATEADD(MONTH,1,ED01AR01)=max_ED01BR02
                        THEN '非循环'
                        WHEN ISNULL(ED060D03,'')=''
                        AND ED01AJ01=ED01BJ01
                        THEN '循环'
                        WHEN ISNULL(ED060D03,'')=''
                        AND ED01AJ01 > ED01BJ01
                        THEN '非循环'
                    END AS xunhuan,
                    CASE
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) <=1
                        THEN '短期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) <=5
                        AND DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10)
                            ,'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) >1
                        THEN '中期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) >5
                        THEN '长期负债'
                    END AS Tenor
                FROM
                    CR_COM_ED01 A
                LEFT JOIN
                    CR_COM_EDC B
                ON
                    A.BATCH_ID=B.ID
                AND A.ED01AI03=B.ED060I01
                LEFT JOIN
                    (
                        SELECT
                            A1.ED01BJ01,
                            B1.PARENTID,
                            B1.max_ED01BR02
                        FROM
                            CR_COM_ED01BH A1
                        LEFT JOIN
                            (
                                SELECT
                                    MAX(ED01BR02) max_ED01BR02,
                                    PARENTID
                                FROM
                                    CR_COM_ED01BH
                                GROUP BY
                                    PARENTID) B1
                        ON
                            A1.PARENTID=B1.PARENTID
                        AND A1.ED01BR02=B1.max_ED01BR02
                        WHERE
                            B1.PARENTID IS NOT NULL) C
                ON
                    A.ID=C.PARENTID
                LEFT JOIN
                    (
                        SELECT
                            BATCH_ID,
                            ED01AI03,
                            COUNT(*) AS COUNT
                        FROM
                            (
                                SELECT
                                    BATCH_ID,
                                    ED01AI03
                                FROM
                                    CR_COM_ED01
                                UNION ALL
                                SELECT
                                    BATCH_ID,
                                    ED04AI03 AS ED01AI03
                                FROM
                                    CR_COM_ED04 ) A
                        WHERE
                            ED01AI03<>''
                        GROUP BY
                            BATCH_ID,
                            ED01AI03 ) D
                ON
                    A.BATCH_ID=D.BATCH_ID
                AND ISNULL(COUNT,0) > 1
                WHERE
                    D.BATCH_ID IS NOT NULL
                AND (
                        ED01AD05 IN ('10',
                                     '13',
                                     '15',
                                     '31',
                                     '41',
                                     '51')
                    OR  (
                            ED01AD05='11'
                        AND ED01AD06 IN ('11',
                                         '13',
                                         '14',
                                         '15',
                                         '16',
                                         '17'))
                    OR  (
                            ED01AD05='12'
                        AND ED01AD06 IN ('11',
                                         '19',
                                         '21',
                                         '22',
                                         '23',
                                         '25',
                                         '29',
                                         '31',
                                         '39',
                                         '41',
                                         '42',
                                         '43',
                                         '49'))) ) A1
        WHERE
            Tenor IN ('短期负债',
                      '中期负债')
        GROUP BY
            BATCH_ID) AC
ON
    A.ID=AC.BATCH_ID
LEFT JOIN
    (
        SELECT
            batch_id,
            SUM(CAST(ISNULL(
                CASE
                    WHEN DATEADD(MONTH,1,ED01AR01)=max_ED01BR02
                    THEN ED01BJ01
                    WHEN Tenor='短期负债'
                    AND ISNULL(ED060D03,'')='1'
                    THEN ED060J01
                    WHEN Tenor='短期负债'
                    AND ISNULL(ED060D03,'')='0'
                    THEN ED01BJ01
                    WHEN Tenor='短期负债'
                    AND ISNULL(ED060D03,'')=''
                    AND ED01AJ01=ED01BJ01
                    THEN ED01AJ01
                    WHEN Tenor='短期负债'
                    AND ISNULL(ED060D03,'')=''
                    AND ED01AJ01 > ED01BJ01
                    THEN ED01BJ01
                    WHEN Tenor='中期负债'
                    THEN ED01BJ01
                    WHEN Tenor='长期负债'
                    THEN ED01BJ01
                END,0) AS INT)) AS WC
        FROM
            (
                SELECT
                    A.BATCH_ID,
                    ED060D03,
                    A.ED01AI03,
                    ED01AJ01,
                    C.ED01BJ01,
                    ED01AR01,
                    max_ED01BR02,
                    B.ED060J01,
                    CASE
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) <=1
                        THEN '短期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) <=5
                        AND DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10)
                            ,'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) >1
                        THEN '中期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) >5
                        THEN '长期负债'
                    END AS Tenor
                FROM
                    CR_COM_ED01 A
                LEFT JOIN
                    CR_COM_EDC B
                ON
                    A.BATCH_ID=B.ID
                AND A.ED01AI03=B.ED060I01
                LEFT JOIN
                    (
                        SELECT
                            A1.ED01BJ01,
                            B1.PARENTID,
                            B1.max_ED01BR02
                        FROM
                            CR_COM_ED01BH A1
                        LEFT JOIN
                            (
                                SELECT
                                    MAX(ED01BR02) max_ED01BR02,
                                    PARENTID
                                FROM
                                    CR_COM_ED01BH
                                GROUP BY
                                    PARENTID) B1
                        ON
                            A1.PARENTID=B1.PARENTID
                        AND A1.ED01BR02=B1.max_ED01BR02
                        WHERE
                            B1.PARENTID IS NOT NULL) C
                ON
                    A.ID=C.PARENTID
                LEFT JOIN
                    (
                        SELECT
                            BATCH_ID,
                            ED01AI03,
                            COUNT(*) AS COUNT
                        FROM
                            (
                                SELECT
                                    BATCH_ID,
                                    ED01AI03
                                FROM
                                    CR_COM_ED01
                                UNION ALL
                                SELECT
                                    BATCH_ID,
                                    ED04AI03 AS ED01AI03
                                FROM
                                    CR_COM_ED04 ) A
                        WHERE
                            ED01AI03<>''
                        GROUP BY
                            BATCH_ID,
                            ED01AI03 ) D
                ON
                    A.BATCH_ID=D.BATCH_ID
                AND A.ED01AI03=D.ED01AI03
                AND ISNULL(COUNT,0) <= 1
                WHERE
                    ED01AD05 IN ('10',
                                 '11',
                                 '12',
                                 '13',
                                 '14',
                                 '15',
                                 '31',
                                 '41',
                                 '51') ) A
        GROUP BY
            batch_id) AD
ON
    AD.BATCH_ID=A.ID
LEFT JOIN
    (
        SELECT
            A3.BATCH_ID,
            SUM(CAST(REPLACE(ISNULL(C3.ED060J01,0),',','') AS INT)) AS ED060J01
        FROM
            (
                SELECT
                    BATCH_ID,
                    ED01AI03
                FROM
                    dbo.CR_COM_ED01 A
                WHERE
                    ED01AD05='16'
                OR  (
                        ED01AD05='21'
                    AND ED01AD06='20')
                UNION ALL
                SELECT
                    ID       AS BATCH_ID,
                    ED04AI03 AS ED01AI03
                FROM
                    dbo.CR_COM_EDB B
                WHERE
                    ED04AD03 IN ('51',
                                 '61')) A3
        LEFT JOIN
            CR_COM_EDC C3
        ON
            A3.BATCH_ID=C3.ID
        AND A3.ED01AI03=C3.ED060I01
        LEFT JOIN
            (
                SELECT
                    BATCH_ID,
                    ED01AI03,
                    COUNT(1) AS COUNT
                FROM
                    (
                        SELECT
                            BATCH_ID,
                            ED01AI03
                        FROM
                            CR_COM_ED01
                        UNION ALL
                        SELECT
                            BATCH_ID,
                            ED04AI03 AS ED01AI03
                        FROM
                            CR_COM_ED04 ) a
                WHERE
                    ED01AI03<>''
                GROUP BY
                    BATCH_ID,
                    ED01AI03) B3
        ON
            A3.BATCH_ID=B3.BATCH_ID
        AND ISNULL(B3.COUNT,0) <= 1
        GROUP BY
            A3.BATCH_ID ) AE
ON
    AA.BATCH_ID=A.ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            SUM(
                CASE
                    WHEN Tenor='短期负债'
                    AND xunhuan='循环'
                    THEN CAST(ISNULL(ED060J01,0) AS INT)
                    WHEN Tenor='短期负债'
                    AND xunhuan='非循环'
                    THEN CAST(ISNULL(ED01BJ01,0) AS INT)
                    WHEN Tenor='中期负债'
                    THEN CAST(ISNULL(ED01BJ01,0) AS INT)
                    WHEN Tenor='长期负债'
                    THEN CAST(ISNULL(ED01BJ01,0) AS INT)
                END) AS WC_2
        FROM
            (
                SELECT DISTINCT
                    A.BATCH_ID,
                    A.ED01AI01,
                    A.ED01AI03,
                    B.ED060J01,
                    C.ED01BJ01,
                    CASE
                        WHEN ISNULL(ED060D03,'')='1'
                        THEN '循环'
                        WHEN ISNULL(ED060D03,'')='0'
                        THEN '非循环'
                        WHEN DATEADD(MONTH,1,ED01AR01)=max_ED01BR02
                        THEN '非循环'
                        WHEN ISNULL(ED060D03,'')=''
                        AND ED01AJ01=ED01BJ01
                        THEN '循环'
                        WHEN ISNULL(ED060D03,'')=''
                        AND ED01AJ01 > ED01BJ01
                        THEN '非循环'
                    END AS xunhuan,
                    CASE
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) <=1
                        THEN '短期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) <=5
                        AND DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10)
                            ,'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) >1
                        THEN '中期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(ED01AR01,1,10
                            ),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (ED01AR02,1,10),'.',''),'-',''),112)) >5
                        THEN '长期负债'
                    END AS Tenor
                FROM
                    CR_COM_ED01 A
                LEFT JOIN
                    CR_COM_EDC B
                ON
                    A.BATCH_ID=B.ID
                AND A.ED01AI03=B.ED060I01
                LEFT JOIN
                    (
                        SELECT
                            A1.ED01BJ01,
                            B1.PARENTID,
                            B1.max_ED01BR02
                        FROM
                            CR_COM_ED01BH A1
                        LEFT JOIN
                            (
                                SELECT
                                    MAX(ED01BR02) max_ED01BR02,
                                    PARENTID
                                FROM
                                    CR_COM_ED01BH
                                GROUP BY
                                    PARENTID) B1
                        ON
                            A1.PARENTID=B1.PARENTID
                        AND A1.ED01BR02=B1.max_ED01BR02
                        WHERE
                            B1.PARENTID IS NOT NULL) C
                ON
                    A.ID=C.PARENTID
                LEFT JOIN
                    (
                        SELECT
                            BATCH_ID,
                            ED01AI03,
                            COUNT(*) AS COUNT
                        FROM
                            (
                                SELECT
                                    BATCH_ID,
                                    ED01AI03
                                FROM
                                    CR_COM_ED01
                                UNION ALL
                                SELECT
                                    BATCH_ID,
                                    ED04AI03 AS ED01AI03
                                FROM
                                    CR_COM_ED04 ) A
                        WHERE
                            ED01AI03<>''
                        GROUP BY
                            BATCH_ID,
                            ED01AI03 ) D
                ON
                    A.BATCH_ID=D.BATCH_ID
                AND ISNULL(COUNT,0) > 1
                WHERE
                    D.BATCH_ID IS NOT NULL
                AND ED01AD05 IN ('10',
                                 '11',
                                 '12',
                                 '13',
                                 '14',
                                 '15',
                                 '31',
                                 '41',
                                 '51') ) A1
        GROUP BY
            BATCH_ID) AF
ON
    AF.BATCH_ID=A.ID;

ALTER VIEW
    IBS_PER_CREDIT
    (
        ID,
        BATCHID,
        账户名称,
        授信机构,
        帐户状态,
        帐户类型,
        担保方式,
        开立日期,
        到期日,
        期数,
        授信额度,
        已用额度,
        币种,
        余额,
        本月应还款,
        本月实还款,
        最近一次还款日期,
        实际关闭日期,
        当前五级分类,
        当前逾期期数,
        当前逾期金额,
        曾经逾期月数,
        曾经逾期金额加总,
        曾经最大逾期期数,
        TUE,
        DSR,
        WC
    ) AS
SELECT DISTINCT
    B.ID,
    B.BATCH_ID AS BATCHID,
    B.PD01AI01 AS '账户名称',
    A.PA01BI02 AS '授信机构',
    CASE
        WHEN B.PD01BD01 IS NULL
        THEN B.PD01CD01
        ELSE B.PD01BD01
    END        AS '帐户状态',
    PD01AD01   AS '帐户类型',
    PD01AD07   AS '担保方式',
    PD01AR01   AS '开立日期',
    PD01AR02   AS '到期日',
    PD01AS01   AS '期数',
    PD01AJ02   AS '授信额度',
    PD01CJ02   AS '已用额度',
    PD01AD04   AS '币种',
    B.PD01BJ01 AS '余额',
    PD01CJ04   AS '本月应还款',
    PD01CJ05   AS '本月实还款',
    PD01CR03   AS '最近一次还款日期',
    PD01BR01   AS '实际关闭日期',
    CASE
        WHEN PD01BD03 IS NULL
        OR  PD01BD03=''
        THEN PD01CD02
        ELSE PD01BD03
    END                                                                 AS '当前五级分类',
    PD01CS02                                                            AS '当前逾期期数',
    PD01CJ06                                                            AS '当前逾期金额',
    ISNULL(C.YQYS,0)                                                    AS '曾经逾期月数',
    ISNULL(C.PD01EJ01,0)                                                AS '曾经逾期金额加总',
    ISNULL(C.PD01ED01,0)                                                AS '曾经最大逾期期数',
    CAST(ISNULL(S.PD01BJ01,0) AS VARCHAR(30))                           AS 'TUE',
    CAST(ISNULL(T.Monthly_Debt,0)+0.1*ISNULL(U.fuzai,0) AS VARCHAR(30)) AS 'DSR',
    CAST(ISNULL(V.fuzhai,0) AS VARCHAR(30))                             AS 'WC'
FROM
    CR_PER_PDA B
LEFT JOIN
    CR_PER_PRH A
ON
    A.BATCH_ID=B.BATCH_ID
LEFT JOIN
    (
        SELECT
            PARENT_ID,
            COUNT(PD01ED01)                                      AS YQYS,
            SUM(CAST(REPLACE(ISNULL(PD01EJ01,0),',','') AS INT)) AS PD01EJ01,
            MAX(PD01ED01)                                        AS PD01ED01
        FROM
            CR_PER_PD01EH
        WHERE
            PD01ED01 IN ('1',
                         '2',
                         '3',
                         '4',
                         '5',
                         '6',
                         '7')
        GROUP BY
            PARENT_ID ) C
ON
    B.ID=C.PARENT_ID
LEFT JOIN
    (
        SELECT
            AA.BATCH_ID,
            AA.ID,
            SUM(ISNULL(AA.PD01BJ01,0)) AS PD01BJ01
        FROM
            (
                SELECT
                    A1.BATCH_ID,
                    A1.ID,
                    CASE
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(B1.PA01AR01,1
                            ,10),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (A1.PD01AR02,1,10),'.',''),'-',''),112)) <=1
                        THEN '短期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(B1.PA01AR01,1
                            ,10),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (A1.PD01AR02,1,10),'.',''),'-',''),112)) <=5
                        AND DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(B1.PA01AR01,1,
                            10),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (A1.PD01AR02,1,10),'.',''),'-',''),112)) >1
                        THEN '中期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(B1.PA01AR01,1
                            ,10),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (A1.PD01AR02,1,10),'.',''),'-',''),112)) >5
                        THEN '长期负债'
                    END AS Tenor,
                    CASE
                        WHEN A1.PD01AD07 IN ('3',
                                             '4')
                        THEN 'Unsecured'
                        WHEN A1.PD01AD07 IN ('1',
                                             '2',
                                             '5',
                                             '6')
                        THEN 'Secured'
                        ELSE 'Secured'
                    END                                                AS DANBAO,
                    CAST(REPLACE(ISNULL(A1.PD01BJ01,0),',','') AS INT) AS PD01BJ01
                FROM
                    CR_PER_PDA A1
                LEFT JOIN
                    CR_PER_PRH B1
                ON
                    A1.BATCH_ID=B1.BATCH_ID
                WHERE
                    A1.PD01AD03 IN ('91',
                                    '41',
                                    '33')
                OR  A1.PD01AD01 IN ('R2',
                                    'R3')) AA
        WHERE
            AA.DANBAO='Unsecured'
        AND AA.Tenor IN ('长期负债',
                         '中期负债')
        GROUP BY
            AA.BATCH_ID,
            AA.ID ) S
ON
    S.BATCH_ID=B.BATCH_ID
AND B.ID=S.ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            ID,
            SUM(ISNULL(
                CASE
                    WHEN loan = 'installmen loan'
                    AND CAST(ISNULL(PD01EJ01_1, 0) AS INT) = CAST(ISNULL(PD01EJ01, 0) AS INT)
                    THEN CAST(ISNULL(PD01EJ01_1, 0) AS INT)
                    WHEN loan='installmen loan'
                    AND CAST(ISNULL(PD01EJ01_1,0) AS INT) <> CAST(ISNULL(PD01EJ01,0) AS INT)
                    THEN (
                            CASE
                                WHEN 贷款月摊销金额估>(PD01CJ04 *1.2)
                                THEN 贷款月摊销金额估
                                ELSE PD01CJ04
                            END)
                    WHEN loan='installmen loan'
                    AND maxyue IS NULL
                    THEN 贷款月摊销金额估
                    WHEN loan = 'non-installment loan'
                    AND Tenor <= 1
                    THEN CAST(0.08 * CAST(ISNULL(PD01BJ01, 0) AS INT) / 12 AS DECIMAL(22, 2))
                    WHEN loan = 'non-installment loan'
                    AND Tenor > 1
                    THEN
                        CASE
                            WHEN DANBAO = 'Secured'
                            THEN CAST(0.02 * CAST(PD01AJ02 AS INT) AS DECIMAL(22, 2))
                            WHEN DANBAO = 'Unsecured'
                            THEN CAST(CAST(PD01AJ02 AS INT) / CAST(Tenor AS INT) AS DECIMAL(22, 2))
                        END
                END, 0)) AS Monthly_Debt
        FROM
            (
                SELECT
                    *,
                    CASE
                        WHEN loan='installmen loan'
                        THEN CAST(PD01BJ01*0.25*Power((1+0.25),ABS(摊销月数))/Power((1+0.25),ABS(摊销月数))
                            -1 AS DECIMAL)
                    END AS '贷款月摊销金额估'
                FROM
                    (
                        SELECT
                            A.BATCH_ID,
                            A.ID,
                            PD01BJ01 ,
                            PD01CJ04,
                            PD01AJ02 ,
                            A.PD01AR02,
                            B1.PA01AR01 ,
                            CASE
                                WHEN ISNULL(PD01AD05, '') IN ( '11',
                                                              '12',
                                                              '14',
                                                              '15',
                                                              '19',
                                                              '32',
                                                              '33' )
                                THEN 'installment loan'
                                WHEN ISNULL(PD01AD05, '') IN ('31',
                                                              '21',
                                                              '22',
                                                              '39')
                                THEN 'non-installment loan'
                            END AS loan ,
                            CASE
                                WHEN PD01AD07 IN ('3',
                                                  '4')
                                THEN 'Unsecured'
                                WHEN PD01AD07 IN ('1',
                                                  '2',
                                                  '5',
                                                  '6')
                                THEN 'Secured'
                                ELSE 'Secured'
                            END AS DANBAO ,
                            ISNULL(DATEDIFF(YEAR, CONVERT(DATETIME, REPLACE(REPLACE(substring
                            (A.PD01AR02, 1, 10), '.', ''), '-', ''), 112), CONVERT(DATETIME,
                            REPLACE(REPLACE(substring(B1.PA01AR01, 1, 10), '.', ''), '-', ''), 112)
                            ), 0) AS Tenor ,
                            AA.maxyue1,
                            AA.PD01EJ01_1,
                            BB.maxyue,
                            BB.PD01EJ01,
                            CAST(DATEDIFF(MONTH,CONVERT(DATETIME,REPLACE(REPLACE(substring(PA01AR01
                            ,1,10),'.',''),'-',''),112), CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (PD01AR02,1,10),'.',''),'-',''),112)) AS INT) AS '摊销月数'
                        FROM
                            CR_PER_PDA A
                        LEFT JOIN
                            CR_PER_PRH B1
                        ON
                            A.BATCH_ID = B1.BATCH_ID
                        LEFT JOIN
                            (
                                SELECT
                                    B1.BATCH_ID,
                                    B1.PARENT_ID,
                                    B1.maxyue1 ,
                                    REPLACE(B.PD01EJ01, ',', '') AS PD01EJ01_1
                                FROM
                                    CR_PER_PD01EH B
                                LEFT JOIN
                                    (
                                        SELECT
                                            BATCH_ID,
                                            PARENT_ID ,
                                            MAX(CONVERT(VARCHAR(10), substring(PD01ER03, 1, 4) +
                                            '-' +
                                            CASE
                                                WHEN LEN(substring(REPLACE(substring(PD01ER03, 1,
                                                    10), '.', '-'), 6, 2)) = 2
                                                THEN substring(REPLACE(substring(PD01ER03, 1, 10),
                                                    '.', '-'), 6, 2) + '-01'
                                                ELSE '0' + substring(REPLACE(substring(PD01ER03, 1,
                                                    10), '.', '-'), 6, 2) + '-01'
                                            END, 120)) AS maxyue1
                                        FROM
                                            CR_PER_PD01EH
                                        GROUP BY
                                            BATCH_ID,
                                            PARENT_ID ) B1
                                ON
                                    B.BATCH_ID = B1.BATCH_ID
                                AND B.PARENT_ID = B1.PARENT_ID
                                AND substring(B.PD01ER03, 1, 4) + '-' +
                                    CASE
                                        WHEN LEN(substring(REPLACE(substring(B.PD01ER03, 1, 10),
                                            '.', '-'), 6, 2)) = 2
                                        THEN substring(REPLACE(substring(B.PD01ER03, 1, 10), '.',
                                            '-'), 6, 2) + '-01'
                                        ELSE '0' + substring(REPLACE(substring(B.PD01ER03, 1, 10),
                                            '.', '-'), 6, 2) + '-01'
                                    END = B1.maxyue1
                                WHERE
                                    B1.BATCH_ID IS NOT NULL ) AA
                        ON
                            A.BATCH_ID = AA.BATCH_ID
                        AND A.ID = AA.PARENT_ID
                        LEFT JOIN
                            (
                                SELECT
                                    A2.BATCH_ID,
                                    A2.PARENT_ID,
                                    A2.maxyue ,
                                    REPLACE(A1.PD01EJ01, ',', '') AS PD01EJ01
                                FROM
                                    CR_PER_PD01EH A1
                                LEFT JOIN
                                    (
                                        SELECT
                                            BATCH_ID,
                                            PARENT_ID ,
                                            MAX(CONVERT(VARCHAR(10), DATEADD(MONTH, -1, substring
                                            (PD01ER03, 1, 4) + '-' +
                                            CASE
                                                WHEN LEN(substring(REPLACE(substring(PD01ER03, 1,
                                                    10), '.', '-'), 6, 2)) = 2
                                                THEN substring(REPLACE(substring(PD01ER03, 1, 10),
                                                    '.', '-'), 6, 2) + '-01'
                                                ELSE '0' + substring(REPLACE(substring(PD01ER03, 1,
                                                    10), '.', '-'), 6, 2) + '-01'
                                            END), 120)) AS maxyue
                                        FROM
                                            CR_PER_PD01EH
                                        GROUP BY
                                            BATCH_ID,
                                            PARENT_ID ) A2
                                ON
                                    A1.BATCH_ID = A2.BATCH_ID
                                AND A1.PARENT_ID = A2.PARENT_ID
                                AND substring(A1.PD01ER03, 1, 4) + '-' +
                                    CASE
                                        WHEN LEN(substring(REPLACE(substring(A1.PD01ER03, 1, 10),
                                            '.', '-'), 6, 2)) = 2
                                        THEN substring(REPLACE(substring(A1.PD01ER03, 1, 10), '.',
                                            '-'), 6, 2) + '-01'
                                        ELSE '0' + substring(REPLACE(substring(A1.PD01ER03, 1, 10),
                                            '.', '-'), 6, 2) + '-01'
                                    END = A2.maxyue
                                WHERE
                                    A2.BATCH_ID IS NOT NULL ) BB
                        ON
                            AA.BATCH_ID = BB.BATCH_ID
                        AND AA.PARENT_ID = BB.PARENT_ID
                        WHERE
                            A.PD01AD03 IN ('91',
                                           '41',
                                           '33')
                        AND A.PD01AD05 IN ( '11',
                                           '12',
                                           '14',
                                           '15',
                                           '19',
                                           '32',
                                           '33',
                                           '31',
                                           '21',
                                           '22',
                                           '39' )) b ) a
        GROUP BY
            BATCH_ID,
            ID ) T
ON
    B.BATCH_ID=T.BATCH_ID
AND B.ID=T.ID
LEFT JOIN
    (
        SELECT
            ID,
            SUM(CAST(REPLACE(REPLACE(ISNULL(PD01CJ02,0),',',''),'-','') AS INT))+SUM(CAST(REPLACE
            (REPLACE(ISNULL(PD01CJ15,0),',',''),'-','') AS INT)) AS fuzai,
            BATCH_ID
        FROM
            CR_PER_PDA
        WHERE
            PD01AD01 IN ('R2',
                         'R3')
        GROUP BY
            BATCH_ID,
            ID) U
ON
    U.BATCH_ID=B.BATCH_ID
AND B.ID=U.ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            ID,
            SUM(
                CASE
                    WHEN PD01AD01='R1'
                    THEN CAST(REPLACE(REPLACE(ISNULL(PD01AJ02,0),',',''),'.','') AS INT)
                    ELSE CAST(REPLACE(REPLACE(ISNULL(PD01BJ01,0),',',''),'.','') AS INT)
                END) AS fuzhai
        FROM
            CR_PER_PDA
        WHERE
            PD01AD03='41'
        GROUP BY
            BATCH_ID,
            ID) V
ON
    A.BATCH_ID=V.BATCH_ID
AND B.ID=V.ID;

ALTER VIEW
    IBS_PER_CREDIT_SUM
    (
        报表序号,
        担保人姓名,
        查询日期,
        是否白户,
        有无逾期,
        逾期金额,
        报告编码,
        身份证号码_前三位_后六位,
        负面信息,
        贷款人征信类别,
        征信分相对位置,
        近3月查询次数,
        近6月查询次数,
        近12月查询次数,
        当前个人住房贷款笔数,
        当前个人住房贷款机构数,
        当前个人住房贷款总放款额,
        当前个人住房贷款总余额,
        当前个人住房贷款月应还款,
        当前个人住房贷款月实还款,
        当前个人住房贷款逾期笔数,
        当前个人住房贷款逾期金额,
        当前个人经营性贷款笔数,
        当前个人经营性贷款机构数,
        当前个人经营性贷款总放款额,
        当前个人经营性贷款总余额,
        当前个人经营性贷款月应还款,
        当前个人经营性贷款月实还款,
        当前个人经营性贷款逾期笔数,
        当前个人经营性贷款逾期金额,
        当前其他贷款笔数,
        当前其他贷款机构数,
        当前其他贷款总放款额,
        当前其他贷款总余额,
        当前其他贷款月应还款,
        当前其他贷款月实还款,
        当前其他贷款逾期笔数,
        当前其他贷款逾期金额,
        当前贷记卡账户数,
        当前贷记卡机构数,
        当前贷记卡总额度,
        当前信用卡应还款额,
        当前月度应还款,
        当前月度实还款,
        近半年逾期31_60次数,
        近半年逾期31_60金额,
        近一年逾期60天以上次数,
        近一年逾期60天以上金额,
        近两年核销笔数,
        近两年核销金额,
        TUE,
        DSR,
        WC,
        Total_Bank_Limit
    ) AS
SELECT
    A.id       AS '报表序号',
    A.PA01BQ01 AS '担保人姓名',
    A.PA01AR01 AS '查询日期',
    CASE
        WHEN ISNULL(B.PC02AS01,0)=0
        THEN '白户'
        ELSE '非白户'
    END AS '是否白户',
    CASE
        WHEN ISNULL(C.PC02DJ01,0)=0
        THEN '无'
        ELSE '有'
    END                                    AS '有无逾期',
    ISNULL(C.PC02DJ01,0)                   AS '逾期金额',
    A.PA01AI01                             AS '报告编码',
    LEFT(A.PA01BI01,3)+RIGHT(A.PA01BI01,3) AS '身份证号码_前三位_后六位',
    ISNULL(PC040D01_1,'')+'/'+ISNULL(PC040D01_2,'')+'/'+ISNULL(PC040D01_3,'')+'/'+ISNULL(PC040D01_4
    ,'') AS '负面信息',
    CASE
        WHEN DATEDIFF(MONTH, CONVERT(DATETIME,D.PC02AR01,112),CONVERT(DATETIME,REPLACE(REPLACE
            (substring(A.PA01AR01,1,10),'.',''),'-',''),112)) >= 12
        THEN 'Mature Bureau'
        WHEN DATEDIFF(MONTH, CONVERT(DATETIME,D.PC02AR01,112),CONVERT(DATETIME,REPLACE(REPLACE
            (substring(A.PA01AR01,1,10),'.',''),'-',''),112)) < 12
        THEN 'Thin Bureau'
        WHEN CAST(REPLACE(REPLACE(ISNULL(D.PC02AR01,0),'-',''),'.','') AS INT) = 0
        THEN 'New Bureau'
    END                                             AS '贷款人征信类别',
    E.PC010Q02+'%'                                  AS '征信分相对位置',
    ISNULL(F.COUNT3,0)                              AS '近3月查询次数',
    ISNULL(G.COUNT6,0)                              AS '近6月查询次数',
    ISNULL(H.COUNT12,0)                             AS '近12月查询次数',
    ISNULL(I.BISHU_I,0)                             AS '当前个人住房贷款笔数',
    ISNULL(I.JGBISHU_I,0)                           AS '当前个人住房贷款机构数',
    ISNULL(I.PD01AJ01_I,0)                          AS '当前个人住房贷款总放款额',
    ISNULL(I.PD01BJ01_I,0)                          AS '当前个人住房贷款总余额',
    ISNULL(I.PD01CJ04_I,0)                          AS '当前个人住房贷款月应还款',
    ISNULL(I.PD01CJ05_I,0)                          AS '当前个人住房贷款月实还款',
    ISNULL(J.BISHU_J,0)                             AS '当前个人住房贷款逾期笔数',
    ISNULL(J.PD01CJ06_J,0)                          AS '当前个人住房贷款逾期金额',
    ISNULL(K.BISHU_K,0)                             AS '当前个人经营性贷款笔数',
    ISNULL(K.JGBISHU_K,0)                           AS '当前个人经营性贷款机构数',
    ISNULL(K.PD01AJ01_K,0)                          AS '当前个人经营性贷款总放款额',
    ISNULL(K.PD01BJ01_K,0)                          AS '当前个人经营性贷款总余额',
    ISNULL(K.PD01CJ04_K,0)                          AS '当前个人经营性贷款月应还款',
    ISNULL(K.PD01CJ05_K,0)                          AS '当前个人经营性贷款月实还款',
    ISNULL(L.BISHU_L,0)                             AS '当前个人经营性贷款逾期笔数',
    ISNULL(L.PD01CJ06_L,0)                          AS '当前个人经营性贷款逾期金额',
    ISNULL(M.BISHU_M,0)                             AS '当前其他贷款笔数',
    ISNULL(M.JGBISHU_M,0)                           AS '当前其他贷款机构数',
    ISNULL(M.PD01AJ01_M,0)                          AS '当前其他贷款总放款额',
    ISNULL(M.PD01BJ01_M,0)                          AS '当前其他贷款总余额',
    ISNULL(M.PD01CJ04_M,0)                          AS '当前其他贷款月应还款',
    ISNULL(M.PD01CJ05_M,0)                          AS '当前其他贷款月实还款',
    ISNULL(N.BISHU_N,0)                             AS '当前其他贷款逾期笔数',
    ISNULL(N.PD01CJ06_N,0)                          AS '当前其他贷款逾期金额',
    ISNULL(O.ZHANGHU,0)                             AS '当前贷记卡账户数',
    ISNULL(O.JGBISHU,0)                             AS '当前贷记卡机构数',
    ISNULL(O.SXED,0)                                AS '当前贷记卡总额度',
    ISNULL(O.YHKED,0)                               AS '当前信用卡应还款额',
    ISNULL(P.BYYH,0)                                AS '当前月度应还款',
    ISNULL(P.BYSH,0)                                AS '当前月度实还款',
    ISNULL(Q.BISHU,0)                               AS '近半年逾期31_60次数',
    ISNULL(Q.PD01CJ07,0)                            AS '近半年逾期31_60金额',
    ISNULL(R.BISHU,0)                               AS '近一年逾期60天以上次数',
    ISNULL(R.PD01CJ07,0)                            AS '近一年逾期60天以上金额',
    ''                                              AS '近两年核销笔数',
    ''                                              AS '近两年核销金额',
    CAST(ISNULL(S.PD01BJ01,0) AS VARCHAR(30))       AS 'TUE',
    CAST(T.Monthly_Debt+0.1*U.fuzai AS VARCHAR(30)) AS 'DSR',
    CAST(ISNULL(V.fuzhai,0) AS VARCHAR(30))         AS 'WC',
    ISNULL(W.fuzhai,0)                              AS 'Total Bank Limit'
FROM
    CR_PER_PRH A
LEFT JOIN
    CR_PER_PCO B
ON
    A.BATCH_ID=B.BATCH_ID
LEFT JOIN
    (
        SELECT
            batch_id,
            MAX(
                CASE
                    WHEN PC040D01='1'
                    THEN 'YES欠税信息'
                    ELSE 'NO欠税信息'
                END) AS PC040D01_1,
            MAX(
                CASE
                    WHEN PC040D01='2'
                    THEN 'YES民事判决信息 '
                    ELSE 'NO欠税信息'
                END) AS PC040D01_2,
            MAX(
                CASE
                    WHEN PC040D01='3'
                    THEN 'YES强制执行信息'
                    ELSE 'NO欠税信息'
                END) AS PC040D01_3,
            MAX(
                CASE
                    WHEN PC040D01='4'
                    THEN 'YES行政处罚信息'
                    ELSE 'NO欠税信息'
                END) AS PC040D01_4
        FROM
            CR_PER_PC040H
        GROUP BY
            batch_id ) PC04
ON
    A.BATCH_ID=PC04.BATCH_ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            SUM(CAST(REPLACE(ISNULL(REPLACE(PC02DJ01,'--',''),0),',','') AS INT)) AS PC02DJ01
        FROM
            CR_PER_PC02DH
        GROUP BY
            BATCH_ID ) C
ON
    A.BATCH_ID=C.BATCH_ID
LEFT JOIN
    (
        SELECT
            MIN(
                CASE
                    WHEN CONVERT(VARCHAR(10),REPLACE(REPLACE(PC02AR01,'.',''),'-',''),112)=''
                    THEN ''
                    ELSE CONVERT(VARCHAR(10),REPLACE(REPLACE(PC02AR01,'.',''),'-',''),112)+'01'
                END) AS PC02AR01,
            BATCH_ID
        FROM
            CR_PER_PC02AH D
        GROUP BY
            BATCH_ID) D
ON
    A.BATCH_ID=D.BATCH_ID
LEFT JOIN
    CR_PER_PSM E
ON
    A.BATCH_ID=E.BATCH_ID
LEFT JOIN
    (
        SELECT
            COUNT(A1.BATCH_ID) AS COUNT3,
            A1.BATCH_ID
        FROM
            CR_PER_POQ A1
        LEFT JOIN
            CR_PER_PRH B1
        ON
            A1.BATCH_ID=B1.BATCH_ID
        WHERE
            A1.PH010Q03 IN ('02',
                            '03',
                            '08')
        AND DATEDIFF(MONTH,CONVERT(DATETIME,REPLACE(REPLACE(A1.PH010R01,'.',''),'-',''),112),
            CONVERT(DATETIME,REPLACE(REPLACE(substring(B1.PA01AR01,1,10),'.',''),'-',''),112)) <= 3
        GROUP BY
            A1.BATCH_ID) F
ON
    A.BATCH_ID=F.BATCH_ID
LEFT JOIN
    (
        SELECT
            COUNT(A1.BATCH_ID) AS COUNT6,
            A1.BATCH_ID
        FROM
            CR_PER_POQ A1
        LEFT JOIN
            CR_PER_PRH B1
        ON
            A1.BATCH_ID=B1.BATCH_ID
        WHERE
            A1.PH010Q03 IN ('02',
                            '03',
                            '08')
        AND DATEDIFF(MONTH,CONVERT(DATETIME,REPLACE(REPLACE(A1.PH010R01,'.',''),'-',''),112),
            CONVERT(DATETIME,REPLACE(REPLACE(substring(B1.PA01AR01,1,10),'.',''),'-',''),112)) <= 6
        GROUP BY
            A1.BATCH_ID) G
ON
    A.BATCH_ID=G.BATCH_ID
LEFT JOIN
    (
        SELECT
            COUNT(A1.BATCH_ID) AS COUNT12,
            A1.BATCH_ID
        FROM
            CR_PER_POQ A1
        LEFT JOIN
            CR_PER_PRH B1
        ON
            A1.BATCH_ID=B1.BATCH_ID
        WHERE
            A1.PH010Q03 IN ('02',
                            '03',
                            '08')
        AND DATEDIFF(MONTH,CONVERT(DATETIME,REPLACE(REPLACE(A1.PH010R01,'.',''),'-',''),112),
            CONVERT(DATETIME,REPLACE(REPLACE(substring(B1.PA01AR01,1,10),'.',''),'-',''),112)) <=
            12
        GROUP BY
            A1.BATCH_ID) H
ON
    A.BATCH_ID=H.BATCH_ID
LEFT JOIN
    (
        SELECT
            COUNT(ISNULL(PD01AI01,0))                            AS BISHU_I,
            COUNT(DISTINCT PD01AI02)                             AS JGBISHU_I,
            SUM(CAST(REPLACE(ISNULL(PD01AJ01,0),',','') AS INT)) AS PD01AJ01_I,
            SUM(CAST(REPLACE(ISNULL(PD01BJ01,0),',','') AS INT)) AS PD01BJ01_I,
            SUM(CAST(REPLACE(ISNULL(PD01CJ04,0),',','') AS INT)) AS PD01CJ04_I,
            SUM(CAST(REPLACE(ISNULL(PD01CJ05,0),',','') AS INT)) AS PD01CJ05_I,
            BATCH_ID
        FROM
            CR_PER_PDA
        WHERE
            PD01AD03 IN ('11',
                         '12',
                         '13')
        GROUP BY
            BATCH_ID) I
ON
    A.BATCH_ID=I.BATCH_ID
LEFT JOIN
    (
        SELECT
            COUNT(ISNULL(PD01AI01,0))                               AS BISHU_J,
            SUM(CAST(REPLACE(ISNULL(A2.PD01CJ06,0),',','') AS INT)) AS PD01CJ06_J,
            BATCH_ID
        FROM
            CR_PER_PDA A2
        WHERE
            PD01AD03 IN ('11',
                         '12',
                         '13')
        AND PD01BD01 ='2'
        GROUP BY
            BATCH_ID) J
ON
    A.BATCH_ID=J.BATCH_ID
LEFT JOIN
    (
        SELECT
            COUNT(ISNULL(PD01AI01,0))                            AS BISHU_K,
            COUNT(DISTINCT PD01AI02)                             AS JGBISHU_K,
            SUM(CAST(REPLACE(ISNULL(PD01AJ01,0),',','') AS INT)) AS PD01AJ01_K,
            SUM(CAST(REPLACE(ISNULL(PD01BJ01,0),',','') AS INT)) AS PD01BJ01_K,
            SUM(CAST(REPLACE(ISNULL(PD01CJ04,0),',','') AS INT)) AS PD01CJ04_K,
            SUM(CAST(REPLACE(ISNULL(PD01CJ05,0),',','') AS INT)) AS PD01CJ05_K,
            BATCH_ID
        FROM
            CR_PER_PDA
        WHERE
            PD01AD03='41'
        GROUP BY
            BATCH_ID) K
ON
    A.BATCH_ID=K.BATCH_ID
LEFT JOIN
    (
        SELECT
            COUNT(ISNULL(PD01AI01,0))                               AS BISHU_L,
            SUM(CAST(REPLACE(ISNULL(A2.PD01CJ06,0),',','') AS INT)) AS PD01CJ06_L,
            BATCH_ID
        FROM
            CR_PER_PDA A2
        WHERE
            PD01AD03='41'
        AND PD01BD01 ='2'
        GROUP BY
            BATCH_ID) L
ON
    A.BATCH_ID=L.BATCH_ID
LEFT JOIN
    (
        SELECT
            COUNT(ISNULL(PD01AI01,0))                            AS BISHU_M,
            COUNT(DISTINCT PD01AI02)                             AS JGBISHU_M,
            SUM(CAST(REPLACE(ISNULL(PD01AJ01,0),',','') AS INT)) AS PD01AJ01_M,
            SUM(CAST(REPLACE(ISNULL(PD01BJ01,0),',','') AS INT)) AS PD01BJ01_M,
            SUM(CAST(REPLACE(ISNULL(PD01CJ04,0),',','') AS INT)) AS PD01CJ04_M,
            SUM(CAST(REPLACE(ISNULL(PD01CJ05,0),',','') AS INT)) AS PD01CJ05_M,
            BATCH_ID
        FROM
            CR_PER_PDA
        WHERE
            PD01AD03 IN ('62',
                         '21',
                         '33',
                         '91')
        GROUP BY
            BATCH_ID) M
ON
    A.BATCH_ID=M.BATCH_ID
LEFT JOIN
    (
        SELECT
            COUNT(ISNULL(PD01AI01,0))                               AS BISHU_N,
            SUM(CAST(REPLACE(ISNULL(A2.PD01CJ06,0),',','') AS INT)) AS PD01CJ06_N,
            BATCH_ID
        FROM
            CR_PER_PDA A2
        WHERE
            PD01AD03 IN ('62',
                         '21',
                         '33',
                         '91')
        AND PD01BD01 ='2'
        GROUP BY
            BATCH_ID) N
ON
    A.BATCH_ID=N.BATCH_ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            CAST(REPLACE(ISNULL(PC02HS02,0),',','') AS INT)+CAST(REPLACE(ISNULL(PC02IS02,0),',','')
            AS INT) AS ZHANGHU,
            CAST(REPLACE(ISNULL(PC02HS01,0),',','') AS INT)+CAST(REPLACE(ISNULL(PC02IS01,0),',','')
            AS INT) AS JGBISHU,
            CAST(REPLACE(ISNULL(PC02HJ01,0),',','') AS INT)+CAST(REPLACE(ISNULL(PC02IJ01,0),',','')
            AS INT) AS SXED,
            CAST(REPLACE(ISNULL(PC02HJ04,0),',','') AS INT)+CAST(REPLACE(ISNULL(PC02IJ04,0),',','')
            AS INT) AS YHKED
        FROM
            CR_PER_PCO) O
ON
    A.BATCH_ID=O.BATCH_ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            SUM(CAST(REPLACE(ISNULL(PD01CJ04,0),',','') AS INT)) AS BYYH,
            SUM(CAST(REPLACE(ISNULL(PD01CJ05,0),',','') AS INT)) AS BYSH
        FROM
            CR_PER_PDA
        WHERE
            PD01AD01 IN ('R2',
                         'R3')
        GROUP BY
            BATCH_ID) P
ON
    A.BATCH_ID=P.BATCH_ID
LEFT JOIN
    (
        SELECT
            B1.BATCH_ID,
            COUNT(ISNULL(B1.PD01AI01,0))                            AS BISHU,
            SUM(CAST(REPLACE(ISNULL(B1.PD01CJ07,0),',','') AS INT)) AS PD01CJ07
        FROM
            CR_PER_PRH A1
        LEFT JOIN
            CR_PER_PDA B1
        ON
            A1.BATCH_ID=B1.BATCH_ID
        WHERE
            DATEDIFF(MONTH, CONVERT(DATETIME,SUBSTRING(REPLACE(REPLACE(A1.PA01AR01,'.',''),'-',''),
            1,8),112),GETDATE()) <= 6
        AND B1.PD01CJ07 IS NOT NULL
        AND REPLACE(B1.PD01CJ07,',','') <> 0
        GROUP BY
            B1.BATCH_ID) Q
ON
    Q.BATCH_ID=A.BATCH_ID
LEFT JOIN
    (
        SELECT
            B1.BATCH_ID,
            COUNT(ISNULL(B1.PD01AI01,0)) AS BISHU,
            SUM(CAST(REPLACE(ISNULL(B1.PD01CJ08,0),',','') AS INT)+CAST(REPLACE(ISNULL(B1.PD01CJ09,
            0),',','') AS INT)+CAST(REPLACE(ISNULL(B1.PD01CJ10,0),',','') AS INT)) AS PD01CJ07
        FROM
            CR_PER_PRH A1
        LEFT JOIN
            CR_PER_PDA B1
        ON
            A1.BATCH_ID=B1.BATCH_ID
        WHERE
            DATEDIFF(MONTH, CONVERT(DATETIME,SUBSTRING(REPLACE(REPLACE(A1.PA01AR01,'.',''),'-',''),
            1,8),112),GETDATE()) <= 12
        AND (
                B1.PD01CJ08 IS NOT NULL
            AND REPLACE(B1.PD01CJ08,',','') <> 0)
        OR  (
                B1.PD01CJ09 IS NOT NULL
            AND REPLACE(B1.PD01CJ09,',','') <> 0)
        OR  (
                B1.PD01CJ10 IS NOT NULL
            AND REPLACE(B1.PD01CJ10,',','') <> 0)
        GROUP BY
            B1.BATCH_ID) R
ON
    R.BATCH_ID=A.BATCH_ID
LEFT JOIN
    (
        SELECT
            AA.BATCH_ID,
            SUM(ISNULL(AA.PD01BJ01,0)) AS PD01BJ01
        FROM
            (
                SELECT
                    A1.BATCH_ID,
                    CASE
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(B1.PA01AR01,1
                            ,10),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (A1.PD01AR02,1,10),'.',''),'-',''),112)) <=1
                        THEN '短期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(B1.PA01AR01,1
                            ,10),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (A1.PD01AR02,1,10),'.',''),'-',''),112)) <=5
                        AND DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(B1.PA01AR01,1,
                            10),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (A1.PD01AR02,1,10),'.',''),'-',''),112)) >1
                        THEN '中期负债'
                        WHEN DATEDIFF(YEAR,CONVERT(DATETIME,REPLACE(REPLACE(substring(B1.PA01AR01,1
                            ,10),'.',''),'-',''),112),CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (A1.PD01AR02,1,10),'.',''),'-',''),112)) >5
                        THEN '长期负债'
                    END AS Tenor,
                    CASE
                        WHEN A1.PD01AD07 IN ('3',
                                             '4')
                        THEN 'Unsecured'
                        WHEN A1.PD01AD07 IN ('1',
                                             '2',
                                             '5',
                                             '6')
                        THEN 'Secured'
                        ELSE 'Secured'
                    END                                                AS DANBAO,
                    CAST(REPLACE(ISNULL(A1.PD01BJ01,0),',','') AS INT) AS PD01BJ01
                FROM
                    CR_PER_PDA A1
                LEFT JOIN
                    CR_PER_PRH B1
                ON
                    A1.BATCH_ID=B1.BATCH_ID
                WHERE
                    A1.PD01AD03 IN ('91',
                                    '41',
                                    '33')
                OR  A1.PD01AD01 IN ('R2',
                                    'R3')) AA
        WHERE
            AA.DANBAO='Unsecured'
        AND AA.Tenor IN ('长期负债',
                         '中期负债')
        GROUP BY
            AA.BATCH_ID) S
ON
    S.BATCH_ID=A.BATCH_ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            SUM(ISNULL(
                CASE
                    WHEN loan = 'installmen loan'
                    AND CAST(ISNULL(PD01EJ01_1, 0) AS INT) = CAST(ISNULL(PD01EJ01, 0) AS INT)
                    THEN CAST(ISNULL(PD01EJ01_1, 0) AS INT)
                    WHEN loan='installmen loan'
                    AND CAST(ISNULL(PD01EJ01_1,0) AS INT) <> CAST(ISNULL(PD01EJ01,0) AS INT)
                    THEN (
                            CASE
                                WHEN 贷款月摊销金额估>(PD01CJ04 *1.2)
                                THEN 贷款月摊销金额估
                                ELSE PD01CJ04
                            END)
                    WHEN loan='installmen loan'
                    AND maxyue IS NULL
                    THEN 贷款月摊销金额估
                    WHEN loan = 'non-installment loan'
                    AND Tenor <= 1
                    THEN CAST(0.08 * CAST(ISNULL(PD01BJ01, 0) AS INT) / 12 AS DECIMAL(22, 2))
                    WHEN loan = 'non-installment loan'
                    AND Tenor > 1
                    THEN
                        CASE
                            WHEN DANBAO = 'Secured'
                            THEN CAST(0.02 * CAST(PD01AJ02 AS INT) AS DECIMAL(22, 2))
                            WHEN DANBAO = 'Unsecured'
                            THEN CAST(CAST(PD01AJ02 AS INT) / CAST(Tenor AS INT) AS DECIMAL(22, 2))
                        END
                END, 0)) AS Monthly_Debt
        FROM
            (
                SELECT
                    *,
                    CASE
                        WHEN loan='installmen loan'
                        THEN CAST(PD01BJ01*0.25*Power((1+0.25),ABS(摊销月数))/Power((1+0.25),ABS(摊销月数))
                            -1 AS DECIMAL)
                    END AS '贷款月摊销金额估'
                FROM
                    (
                        SELECT
                            A.BATCH_ID,
                            A.ID,
                            PD01BJ01 ,
                            PD01CJ04,
                            PD01AJ02 ,
                            A.PD01AR02,
                            B1.PA01AR01 ,
                            CASE
                                WHEN ISNULL(PD01AD05, '') IN ( '11',
                                                              '12',
                                                              '14',
                                                              '15',
                                                              '19',
                                                              '32',
                                                              '33' )
                                THEN 'installment loan'
                                WHEN ISNULL(PD01AD05, '') IN ('31',
                                                              '21',
                                                              '22',
                                                              '39')
                                THEN 'non-installment loan'
                            END AS loan ,
                            CASE
                                WHEN PD01AD07 IN ('3',
                                                  '4')
                                THEN 'Unsecured'
                                WHEN PD01AD07 IN ('1',
                                                  '2',
                                                  '5',
                                                  '6')
                                THEN 'Secured'
                                ELSE 'Secured'
                            END AS DANBAO ,
                            ISNULL(DATEDIFF(YEAR, CONVERT(DATETIME, REPLACE(REPLACE(substring
                            (A.PD01AR02, 1, 10), '.', ''), '-', ''), 112), CONVERT(DATETIME,
                            REPLACE(REPLACE(substring(B1.PA01AR01, 1, 10), '.', ''), '-', ''), 112)
                            ), 0) AS Tenor ,
                            AA.maxyue1,
                            AA.PD01EJ01_1,
                            BB.maxyue,
                            BB.PD01EJ01,
                            CAST(DATEDIFF(MONTH,CONVERT(DATETIME,REPLACE(REPLACE(substring(PA01AR01
                            ,1,10),'.',''),'-',''),112), CONVERT(DATETIME,REPLACE(REPLACE(substring
                            (PD01AR02,1,10),'.',''),'-',''),112)) AS INT) AS '摊销月数'
                        FROM
                            CR_PER_PDA A
                        LEFT JOIN
                            CR_PER_PRH B1
                        ON
                            A.BATCH_ID = B1.BATCH_ID
                        LEFT JOIN
                            (
                                SELECT
                                    B1.BATCH_ID,
                                    B1.PARENT_ID,
                                    B1.maxyue1 ,
                                    REPLACE(B.PD01EJ01, ',', '') AS PD01EJ01_1
                                FROM
                                    CR_PER_PD01EH B
                                LEFT JOIN
                                    (
                                        SELECT
                                            BATCH_ID,
                                            PARENT_ID ,
                                            MAX(CONVERT(VARCHAR(10), substring(PD01ER03, 1, 4) +
                                            '-' +
                                            CASE
                                                WHEN LEN(substring(REPLACE(substring(PD01ER03, 1,
                                                    10), '.', '-'), 6, 2)) = 2
                                                THEN substring(REPLACE(substring(PD01ER03, 1, 10),
                                                    '.', '-'), 6, 2) + '-01'
                                                ELSE '0' + substring(REPLACE(substring(PD01ER03, 1,
                                                    10), '.', '-'), 6, 2) + '-01'
                                            END, 120)) AS maxyue1
                                        FROM
                                            CR_PER_PD01EH
                                        GROUP BY
                                            BATCH_ID,
                                            PARENT_ID ) B1
                                ON
                                    B.BATCH_ID = B1.BATCH_ID
                                AND B.PARENT_ID = B1.PARENT_ID
                                AND substring(B.PD01ER03, 1, 4) + '-' +
                                    CASE
                                        WHEN LEN(substring(REPLACE(substring(B.PD01ER03, 1, 10),
                                            '.', '-'), 6, 2)) = 2
                                        THEN substring(REPLACE(substring(B.PD01ER03, 1, 10), '.',
                                            '-'), 6, 2) + '-01'
                                        ELSE '0' + substring(REPLACE(substring(B.PD01ER03, 1, 10),
                                            '.', '-'), 6, 2) + '-01'
                                    END = B1.maxyue1
                                WHERE
                                    B1.BATCH_ID IS NOT NULL ) AA
                        ON
                            A.BATCH_ID = AA.BATCH_ID
                        AND A.ID = AA.PARENT_ID
                        LEFT JOIN
                            (
                                SELECT
                                    A2.BATCH_ID,
                                    A2.PARENT_ID,
                                    A2.maxyue ,
                                    REPLACE(A1.PD01EJ01, ',', '') AS PD01EJ01
                                FROM
                                    CR_PER_PD01EH A1
                                LEFT JOIN
                                    (
                                        SELECT
                                            BATCH_ID,
                                            PARENT_ID ,
                                            MAX(CONVERT(VARCHAR(10), DATEADD(MONTH, -1, substring
                                            (PD01ER03, 1, 4) + '-' +
                                            CASE
                                                WHEN LEN(substring(REPLACE(substring(PD01ER03, 1,
                                                    10), '.', '-'), 6, 2)) = 2
                                                THEN substring(REPLACE(substring(PD01ER03, 1, 10),
                                                    '.', '-'), 6, 2) + '-01'
                                                ELSE '0' + substring(REPLACE(substring(PD01ER03, 1,
                                                    10), '.', '-'), 6, 2) + '-01'
                                            END), 120)) AS maxyue
                                        FROM
                                            CR_PER_PD01EH
                                        GROUP BY
                                            BATCH_ID,
                                            PARENT_ID ) A2
                                ON
                                    A1.BATCH_ID = A2.BATCH_ID
                                AND A1.PARENT_ID = A2.PARENT_ID
                                AND substring(A1.PD01ER03, 1, 4) + '-' +
                                    CASE
                                        WHEN LEN(substring(REPLACE(substring(A1.PD01ER03, 1, 10),
                                            '.', '-'), 6, 2)) = 2
                                        THEN substring(REPLACE(substring(A1.PD01ER03, 1, 10), '.',
                                            '-'), 6, 2) + '-01'
                                        ELSE '0' + substring(REPLACE(substring(A1.PD01ER03, 1, 10),
                                            '.', '-'), 6, 2) + '-01'
                                    END = A2.maxyue
                                WHERE
                                    A2.BATCH_ID IS NOT NULL ) BB
                        ON
                            AA.BATCH_ID = BB.BATCH_ID
                        AND AA.PARENT_ID = BB.PARENT_ID
                        WHERE
                            A.PD01AD03 IN ('91',
                                           '41',
                                           '33')
                        AND A.PD01AD05 IN ( '11',
                                           '12',
                                           '14',
                                           '15',
                                           '19',
                                           '32',
                                           '33',
                                           '31',
                                           '21',
                                           '22',
                                           '39' )) b ) a
        GROUP BY
            BATCH_ID) T
ON
    A.BATCH_ID=T.BATCH_ID
LEFT JOIN
    (
        SELECT
            SUM(CAST(REPLACE(REPLACE(ISNULL(PD01CJ02,0),',',''),'-','') AS INT))+SUM(CAST(REPLACE
            (REPLACE(ISNULL(PD01CJ15,0),',',''),'-','') AS INT)) AS fuzai,
            BATCH_ID
        FROM
            CR_PER_PDA
        WHERE
            PD01AD01 IN ('R2',
                         'R3')
        GROUP BY
            BATCH_ID) U
ON
    U.BATCH_ID=A.BATCH_ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            SUM(
                CASE
                    WHEN PD01AD01='R1'
                    THEN CAST(REPLACE(REPLACE(ISNULL(PD01AJ02,0),',',''),'.','') AS INT)
                    ELSE CAST(REPLACE(REPLACE(ISNULL(PD01BJ01,0),',',''),'.','') AS INT)
                END) AS fuzhai
        FROM
            CR_PER_PDA
        WHERE
            PD01AD03='41'
        GROUP BY
            BATCH_ID) V
ON
    A.BATCH_ID=V.BATCH_ID
LEFT JOIN
    (
        SELECT
            BATCH_ID,
            SUM(
                CASE
                    WHEN PD01AD01='R1'
                    THEN CAST(REPLACE(REPLACE(ISNULL(PD01AJ02,0),',',''),'.','') AS INT)
                    ELSE CAST(REPLACE(REPLACE(ISNULL(PD01BJ01,0),',',''),'.','') AS INT)
                END) AS fuzhai
        FROM
            CR_PER_PDA
        WHERE
            PD01AD03='41'
        GROUP BY
            BATCH_ID) W
ON
    A.BATCH_ID=W.BATCH_ID;
    
    
--密码发送配置    
INSERT INTO SYS_PARAMS (PARAMGROUP_ID, PARAM_ID, PARAM_NAME, MEMO, ST, IS_LOCK, IS_DEL, CRT_DT, LAST_UPD_TMS, LAST_UPD_OPER, PARAM_VAL, SYS_NAME) VALUES ('PWD', 'PWD_URL', '密码修改WSDL', null, '4', 'F', 'F', null, null, null, 'http://9.24.15.100/creditreference/v2/test/channel-query/serviceAccept?wsdl', 'CRMS');
INSERT INTO SYS_PARAMS (PARAMGROUP_ID, PARAM_ID, PARAM_NAME, MEMO, ST, IS_LOCK, IS_DEL, CRT_DT, LAST_UPD_TMS, LAST_UPD_OPER, PARAM_VAL, SYS_NAME) VALUES ('PWD', 'SEND_PATH', '修改密码发送文件保存路径', null, '4', 'F', 'F', null, null, null, '/tmp/snd_pwd/', 'CRMS');
INSERT INTO SYS_PARAMS (PARAMGROUP_ID, PARAM_ID, PARAM_NAME, MEMO, ST, IS_LOCK, IS_DEL, CRT_DT, LAST_UPD_TMS, LAST_UPD_OPER, PARAM_VAL, SYS_NAME) VALUES ('PWD', 'RECV_PATH', '修改密码接收文件保存路径', null, '4', 'F', 'F', null, null, null, '/tmp/rcv_pwd/', 'CRMS');

